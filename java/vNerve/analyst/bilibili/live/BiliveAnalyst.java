// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vNerve/analyst/bilibili/live/bilive_analyst.proto

package vNerve.analyst.bilibili.live;

public final class BiliveAnalyst {
  private BiliveAnalyst() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code vNerve.analyst.bilibili.live.BiLiveStatisticType}
   */
  public enum BiLiveStatisticType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SLICE = 0;</code>
     */
    SLICE(0),
    /**
     * <code>SESSION = 1;</code>
     */
    SESSION(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SLICE = 0;</code>
     */
    public static final int SLICE_VALUE = 0;
    /**
     * <code>SESSION = 1;</code>
     */
    public static final int SESSION_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BiLiveStatisticType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BiLiveStatisticType forNumber(int value) {
      switch (value) {
        case 0: return SLICE;
        case 1: return SESSION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BiLiveStatisticType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BiLiveStatisticType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BiLiveStatisticType>() {
            public BiLiveStatisticType findValueByNumber(int number) {
              return BiLiveStatisticType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return vNerve.analyst.bilibili.live.BiliveAnalyst.getDescriptor().getEnumTypes().get(0);
    }

    private static final BiLiveStatisticType[] VALUES = values();

    public static BiLiveStatisticType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BiLiveStatisticType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:vNerve.analyst.bilibili.live.BiLiveStatisticType)
  }

  public interface BiLiveStatisticOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vNerve.analyst.bilibili.live.BiLiveStatistic)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 room_id = 1;</code>
     * @return The roomId.
     */
    int getRoomId();

    /**
     * <code>uint64 start = 2;</code>
     * @return The start.
     */
    long getStart();

    /**
     * <code>uint64 end = 3;</code>
     * @return The end.
     */
    long getEnd();

    /**
     * <code>uint32 max_popularity = 4;</code>
     * @return The maxPopularity.
     */
    int getMaxPopularity();

    /**
     * <code>uint32 last_popularity = 5;</code>
     * @return The lastPopularity.
     */
    int getLastPopularity();

    /**
     * <code>uint32 gold_coin = 6;</code>
     * @return The goldCoin.
     */
    int getGoldCoin();

    /**
     * <code>uint32 silver_coin = 7;</code>
     * @return The silverCoin.
     */
    int getSilverCoin();

    /**
     * <code>string title = 8;</code>
     * @return The title.
     */
    java.lang.String getTitle();
    /**
     * <code>string title = 8;</code>
     * @return The bytes for title.
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <code>string area = 9;</code>
     * @return The area.
     */
    java.lang.String getArea();
    /**
     * <code>string area = 9;</code>
     * @return The bytes for area.
     */
    com.google.protobuf.ByteString
        getAreaBytes();

    /**
     * <code>string cover = 10;</code>
     * @return The cover.
     */
    java.lang.String getCover();
    /**
     * <code>string cover = 10;</code>
     * @return The bytes for cover.
     */
    com.google.protobuf.ByteString
        getCoverBytes();

    /**
     * <code>.vNerve.analyst.bilibili.live.BiLiveStatisticType type = 11;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.vNerve.analyst.bilibili.live.BiLiveStatisticType type = 11;</code>
     * @return The type.
     */
    vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatisticType getType();

    /**
     * <code>repeated uint64 real_danmaku_users = 16;</code>
     * @return A list containing the realDanmakuUsers.
     */
    java.util.List<java.lang.Long> getRealDanmakuUsersList();
    /**
     * <code>repeated uint64 real_danmaku_users = 16;</code>
     * @return The count of realDanmakuUsers.
     */
    int getRealDanmakuUsersCount();
    /**
     * <code>repeated uint64 real_danmaku_users = 16;</code>
     * @param index The index of the element to return.
     * @return The realDanmakuUsers at the given index.
     */
    long getRealDanmakuUsers(int index);

    /**
     * <code>repeated uint64 lottery_danmaku_users = 17;</code>
     * @return A list containing the lotteryDanmakuUsers.
     */
    java.util.List<java.lang.Long> getLotteryDanmakuUsersList();
    /**
     * <code>repeated uint64 lottery_danmaku_users = 17;</code>
     * @return The count of lotteryDanmakuUsers.
     */
    int getLotteryDanmakuUsersCount();
    /**
     * <code>repeated uint64 lottery_danmaku_users = 17;</code>
     * @param index The index of the element to return.
     * @return The lotteryDanmakuUsers at the given index.
     */
    long getLotteryDanmakuUsers(int index);

    /**
     * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
     */
    int getGoldUsersAndCoinCount();
    /**
     * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
     */
    boolean containsGoldUsersAndCoin(
        long key);
    /**
     * Use {@link #getGoldUsersAndCoinMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Integer>
    getGoldUsersAndCoin();
    /**
     * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Integer>
    getGoldUsersAndCoinMap();
    /**
     * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
     */

    int getGoldUsersAndCoinOrDefault(
        long key,
        int defaultValue);
    /**
     * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
     */

    int getGoldUsersAndCoinOrThrow(
        long key);

    /**
     * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
     */
    int getSilverUsersAndCoinCount();
    /**
     * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
     */
    boolean containsSilverUsersAndCoin(
        long key);
    /**
     * Use {@link #getSilverUsersAndCoinMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Integer>
    getSilverUsersAndCoin();
    /**
     * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Integer>
    getSilverUsersAndCoinMap();
    /**
     * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
     */

    int getSilverUsersAndCoinOrDefault(
        long key,
        int defaultValue);
    /**
     * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
     */

    int getSilverUsersAndCoinOrThrow(
        long key);

    /**
     * <code>repeated uint64 participated_users = 20;</code>
     * @return A list containing the participatedUsers.
     */
    java.util.List<java.lang.Long> getParticipatedUsersList();
    /**
     * <code>repeated uint64 participated_users = 20;</code>
     * @return The count of participatedUsers.
     */
    int getParticipatedUsersCount();
    /**
     * <code>repeated uint64 participated_users = 20;</code>
     * @param index The index of the element to return.
     * @return The participatedUsers at the given index.
     */
    long getParticipatedUsers(int index);
  }
  /**
   * Protobuf type {@code vNerve.analyst.bilibili.live.BiLiveStatistic}
   */
  public  static final class BiLiveStatistic extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vNerve.analyst.bilibili.live.BiLiveStatistic)
      BiLiveStatisticOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BiLiveStatistic.newBuilder() to construct.
    private BiLiveStatistic(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BiLiveStatistic() {
      title_ = "";
      area_ = "";
      cover_ = "";
      type_ = 0;
      realDanmakuUsers_ = emptyLongList();
      lotteryDanmakuUsers_ = emptyLongList();
      participatedUsers_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BiLiveStatistic();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BiLiveStatistic(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              roomId_ = input.readUInt32();
              break;
            }
            case 16: {

              start_ = input.readUInt64();
              break;
            }
            case 24: {

              end_ = input.readUInt64();
              break;
            }
            case 32: {

              maxPopularity_ = input.readUInt32();
              break;
            }
            case 40: {

              lastPopularity_ = input.readUInt32();
              break;
            }
            case 48: {

              goldCoin_ = input.readUInt32();
              break;
            }
            case 56: {

              silverCoin_ = input.readUInt32();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              title_ = s;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              area_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              cover_ = s;
              break;
            }
            case 88: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                realDanmakuUsers_ = newLongList();
                mutable_bitField0_ |= 0x00000001;
              }
              realDanmakuUsers_.addLong(input.readUInt64());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                realDanmakuUsers_ = newLongList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                realDanmakuUsers_.addLong(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                lotteryDanmakuUsers_ = newLongList();
                mutable_bitField0_ |= 0x00000002;
              }
              lotteryDanmakuUsers_.addLong(input.readUInt64());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                lotteryDanmakuUsers_ = newLongList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                lotteryDanmakuUsers_.addLong(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                goldUsersAndCoin_ = com.google.protobuf.MapField.newMapField(
                    GoldUsersAndCoinDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
              goldUsersAndCoin__ = input.readMessage(
                  GoldUsersAndCoinDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              goldUsersAndCoin_.getMutableMap().put(
                  goldUsersAndCoin__.getKey(), goldUsersAndCoin__.getValue());
              break;
            }
            case 154: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                silverUsersAndCoin_ = com.google.protobuf.MapField.newMapField(
                    SilverUsersAndCoinDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
              silverUsersAndCoin__ = input.readMessage(
                  SilverUsersAndCoinDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              silverUsersAndCoin_.getMutableMap().put(
                  silverUsersAndCoin__.getKey(), silverUsersAndCoin__.getValue());
              break;
            }
            case 160: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                participatedUsers_ = newLongList();
                mutable_bitField0_ |= 0x00000010;
              }
              participatedUsers_.addLong(input.readUInt64());
              break;
            }
            case 162: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                participatedUsers_ = newLongList();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                participatedUsers_.addLong(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          realDanmakuUsers_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          lotteryDanmakuUsers_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          participatedUsers_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vNerve.analyst.bilibili.live.BiliveAnalyst.internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 18:
          return internalGetGoldUsersAndCoin();
        case 19:
          return internalGetSilverUsersAndCoin();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vNerve.analyst.bilibili.live.BiliveAnalyst.internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic.class, vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic.Builder.class);
    }

    public static final int ROOM_ID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <code>uint32 room_id = 1;</code>
     * @return The roomId.
     */
    public int getRoomId() {
      return roomId_;
    }

    public static final int START_FIELD_NUMBER = 2;
    private long start_;
    /**
     * <code>uint64 start = 2;</code>
     * @return The start.
     */
    public long getStart() {
      return start_;
    }

    public static final int END_FIELD_NUMBER = 3;
    private long end_;
    /**
     * <code>uint64 end = 3;</code>
     * @return The end.
     */
    public long getEnd() {
      return end_;
    }

    public static final int MAX_POPULARITY_FIELD_NUMBER = 4;
    private int maxPopularity_;
    /**
     * <code>uint32 max_popularity = 4;</code>
     * @return The maxPopularity.
     */
    public int getMaxPopularity() {
      return maxPopularity_;
    }

    public static final int LAST_POPULARITY_FIELD_NUMBER = 5;
    private int lastPopularity_;
    /**
     * <code>uint32 last_popularity = 5;</code>
     * @return The lastPopularity.
     */
    public int getLastPopularity() {
      return lastPopularity_;
    }

    public static final int GOLD_COIN_FIELD_NUMBER = 6;
    private int goldCoin_;
    /**
     * <code>uint32 gold_coin = 6;</code>
     * @return The goldCoin.
     */
    public int getGoldCoin() {
      return goldCoin_;
    }

    public static final int SILVER_COIN_FIELD_NUMBER = 7;
    private int silverCoin_;
    /**
     * <code>uint32 silver_coin = 7;</code>
     * @return The silverCoin.
     */
    public int getSilverCoin() {
      return silverCoin_;
    }

    public static final int TITLE_FIELD_NUMBER = 8;
    private volatile java.lang.Object title_;
    /**
     * <code>string title = 8;</code>
     * @return The title.
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <code>string title = 8;</code>
     * @return The bytes for title.
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AREA_FIELD_NUMBER = 9;
    private volatile java.lang.Object area_;
    /**
     * <code>string area = 9;</code>
     * @return The area.
     */
    public java.lang.String getArea() {
      java.lang.Object ref = area_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        area_ = s;
        return s;
      }
    }
    /**
     * <code>string area = 9;</code>
     * @return The bytes for area.
     */
    public com.google.protobuf.ByteString
        getAreaBytes() {
      java.lang.Object ref = area_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        area_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COVER_FIELD_NUMBER = 10;
    private volatile java.lang.Object cover_;
    /**
     * <code>string cover = 10;</code>
     * @return The cover.
     */
    public java.lang.String getCover() {
      java.lang.Object ref = cover_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cover_ = s;
        return s;
      }
    }
    /**
     * <code>string cover = 10;</code>
     * @return The bytes for cover.
     */
    public com.google.protobuf.ByteString
        getCoverBytes() {
      java.lang.Object ref = cover_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cover_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 11;
    private int type_;
    /**
     * <code>.vNerve.analyst.bilibili.live.BiLiveStatisticType type = 11;</code>
     * @return The enum numeric value on the wire for type.
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.vNerve.analyst.bilibili.live.BiLiveStatisticType type = 11;</code>
     * @return The type.
     */
    public vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatisticType getType() {
      @SuppressWarnings("deprecation")
      vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatisticType result = vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatisticType.valueOf(type_);
      return result == null ? vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatisticType.UNRECOGNIZED : result;
    }

    public static final int REAL_DANMAKU_USERS_FIELD_NUMBER = 16;
    private com.google.protobuf.Internal.LongList realDanmakuUsers_;
    /**
     * <code>repeated uint64 real_danmaku_users = 16;</code>
     * @return A list containing the realDanmakuUsers.
     */
    public java.util.List<java.lang.Long>
        getRealDanmakuUsersList() {
      return realDanmakuUsers_;
    }
    /**
     * <code>repeated uint64 real_danmaku_users = 16;</code>
     * @return The count of realDanmakuUsers.
     */
    public int getRealDanmakuUsersCount() {
      return realDanmakuUsers_.size();
    }
    /**
     * <code>repeated uint64 real_danmaku_users = 16;</code>
     * @param index The index of the element to return.
     * @return The realDanmakuUsers at the given index.
     */
    public long getRealDanmakuUsers(int index) {
      return realDanmakuUsers_.getLong(index);
    }
    private int realDanmakuUsersMemoizedSerializedSize = -1;

    public static final int LOTTERY_DANMAKU_USERS_FIELD_NUMBER = 17;
    private com.google.protobuf.Internal.LongList lotteryDanmakuUsers_;
    /**
     * <code>repeated uint64 lottery_danmaku_users = 17;</code>
     * @return A list containing the lotteryDanmakuUsers.
     */
    public java.util.List<java.lang.Long>
        getLotteryDanmakuUsersList() {
      return lotteryDanmakuUsers_;
    }
    /**
     * <code>repeated uint64 lottery_danmaku_users = 17;</code>
     * @return The count of lotteryDanmakuUsers.
     */
    public int getLotteryDanmakuUsersCount() {
      return lotteryDanmakuUsers_.size();
    }
    /**
     * <code>repeated uint64 lottery_danmaku_users = 17;</code>
     * @param index The index of the element to return.
     * @return The lotteryDanmakuUsers at the given index.
     */
    public long getLotteryDanmakuUsers(int index) {
      return lotteryDanmakuUsers_.getLong(index);
    }
    private int lotteryDanmakuUsersMemoizedSerializedSize = -1;

    public static final int GOLD_USERS_AND_COIN_FIELD_NUMBER = 18;
    private static final class GoldUsersAndCoinDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Integer>newDefaultInstance(
                  vNerve.analyst.bilibili.live.BiliveAnalyst.internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_GoldUsersAndCoinEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Integer> goldUsersAndCoin_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
    internalGetGoldUsersAndCoin() {
      if (goldUsersAndCoin_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            GoldUsersAndCoinDefaultEntryHolder.defaultEntry);
      }
      return goldUsersAndCoin_;
    }

    public int getGoldUsersAndCoinCount() {
      return internalGetGoldUsersAndCoin().getMap().size();
    }
    /**
     * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
     */

    public boolean containsGoldUsersAndCoin(
        long key) {
      
      return internalGetGoldUsersAndCoin().getMap().containsKey(key);
    }
    /**
     * Use {@link #getGoldUsersAndCoinMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Integer> getGoldUsersAndCoin() {
      return getGoldUsersAndCoinMap();
    }
    /**
     * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
     */

    public java.util.Map<java.lang.Long, java.lang.Integer> getGoldUsersAndCoinMap() {
      return internalGetGoldUsersAndCoin().getMap();
    }
    /**
     * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
     */

    public int getGoldUsersAndCoinOrDefault(
        long key,
        int defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetGoldUsersAndCoin().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
     */

    public int getGoldUsersAndCoinOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetGoldUsersAndCoin().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SILVER_USERS_AND_COIN_FIELD_NUMBER = 19;
    private static final class SilverUsersAndCoinDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Integer>newDefaultInstance(
                  vNerve.analyst.bilibili.live.BiliveAnalyst.internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_SilverUsersAndCoinEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Integer> silverUsersAndCoin_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
    internalGetSilverUsersAndCoin() {
      if (silverUsersAndCoin_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SilverUsersAndCoinDefaultEntryHolder.defaultEntry);
      }
      return silverUsersAndCoin_;
    }

    public int getSilverUsersAndCoinCount() {
      return internalGetSilverUsersAndCoin().getMap().size();
    }
    /**
     * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
     */

    public boolean containsSilverUsersAndCoin(
        long key) {
      
      return internalGetSilverUsersAndCoin().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSilverUsersAndCoinMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Integer> getSilverUsersAndCoin() {
      return getSilverUsersAndCoinMap();
    }
    /**
     * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
     */

    public java.util.Map<java.lang.Long, java.lang.Integer> getSilverUsersAndCoinMap() {
      return internalGetSilverUsersAndCoin().getMap();
    }
    /**
     * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
     */

    public int getSilverUsersAndCoinOrDefault(
        long key,
        int defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetSilverUsersAndCoin().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
     */

    public int getSilverUsersAndCoinOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetSilverUsersAndCoin().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int PARTICIPATED_USERS_FIELD_NUMBER = 20;
    private com.google.protobuf.Internal.LongList participatedUsers_;
    /**
     * <code>repeated uint64 participated_users = 20;</code>
     * @return A list containing the participatedUsers.
     */
    public java.util.List<java.lang.Long>
        getParticipatedUsersList() {
      return participatedUsers_;
    }
    /**
     * <code>repeated uint64 participated_users = 20;</code>
     * @return The count of participatedUsers.
     */
    public int getParticipatedUsersCount() {
      return participatedUsers_.size();
    }
    /**
     * <code>repeated uint64 participated_users = 20;</code>
     * @param index The index of the element to return.
     * @return The participatedUsers at the given index.
     */
    public long getParticipatedUsers(int index) {
      return participatedUsers_.getLong(index);
    }
    private int participatedUsersMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (roomId_ != 0) {
        output.writeUInt32(1, roomId_);
      }
      if (start_ != 0L) {
        output.writeUInt64(2, start_);
      }
      if (end_ != 0L) {
        output.writeUInt64(3, end_);
      }
      if (maxPopularity_ != 0) {
        output.writeUInt32(4, maxPopularity_);
      }
      if (lastPopularity_ != 0) {
        output.writeUInt32(5, lastPopularity_);
      }
      if (goldCoin_ != 0) {
        output.writeUInt32(6, goldCoin_);
      }
      if (silverCoin_ != 0) {
        output.writeUInt32(7, silverCoin_);
      }
      if (!getTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, title_);
      }
      if (!getAreaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, area_);
      }
      if (!getCoverBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, cover_);
      }
      if (type_ != vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatisticType.SLICE.getNumber()) {
        output.writeEnum(11, type_);
      }
      if (getRealDanmakuUsersList().size() > 0) {
        output.writeUInt32NoTag(130);
        output.writeUInt32NoTag(realDanmakuUsersMemoizedSerializedSize);
      }
      for (int i = 0; i < realDanmakuUsers_.size(); i++) {
        output.writeUInt64NoTag(realDanmakuUsers_.getLong(i));
      }
      if (getLotteryDanmakuUsersList().size() > 0) {
        output.writeUInt32NoTag(138);
        output.writeUInt32NoTag(lotteryDanmakuUsersMemoizedSerializedSize);
      }
      for (int i = 0; i < lotteryDanmakuUsers_.size(); i++) {
        output.writeUInt64NoTag(lotteryDanmakuUsers_.getLong(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetGoldUsersAndCoin(),
          GoldUsersAndCoinDefaultEntryHolder.defaultEntry,
          18);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetSilverUsersAndCoin(),
          SilverUsersAndCoinDefaultEntryHolder.defaultEntry,
          19);
      if (getParticipatedUsersList().size() > 0) {
        output.writeUInt32NoTag(162);
        output.writeUInt32NoTag(participatedUsersMemoizedSerializedSize);
      }
      for (int i = 0; i < participatedUsers_.size(); i++) {
        output.writeUInt64NoTag(participatedUsers_.getLong(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (roomId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, roomId_);
      }
      if (start_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, start_);
      }
      if (end_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, end_);
      }
      if (maxPopularity_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, maxPopularity_);
      }
      if (lastPopularity_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, lastPopularity_);
      }
      if (goldCoin_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, goldCoin_);
      }
      if (silverCoin_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, silverCoin_);
      }
      if (!getTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, title_);
      }
      if (!getAreaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, area_);
      }
      if (!getCoverBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, cover_);
      }
      if (type_ != vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatisticType.SLICE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, type_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < realDanmakuUsers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(realDanmakuUsers_.getLong(i));
        }
        size += dataSize;
        if (!getRealDanmakuUsersList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        realDanmakuUsersMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < lotteryDanmakuUsers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(lotteryDanmakuUsers_.getLong(i));
        }
        size += dataSize;
        if (!getLotteryDanmakuUsersList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        lotteryDanmakuUsersMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Integer> entry
           : internalGetGoldUsersAndCoin().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
        goldUsersAndCoin__ = GoldUsersAndCoinDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(18, goldUsersAndCoin__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Integer> entry
           : internalGetSilverUsersAndCoin().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
        silverUsersAndCoin__ = SilverUsersAndCoinDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(19, silverUsersAndCoin__);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < participatedUsers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(participatedUsers_.getLong(i));
        }
        size += dataSize;
        if (!getParticipatedUsersList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        participatedUsersMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic)) {
        return super.equals(obj);
      }
      vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic other = (vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic) obj;

      if (getRoomId()
          != other.getRoomId()) return false;
      if (getStart()
          != other.getStart()) return false;
      if (getEnd()
          != other.getEnd()) return false;
      if (getMaxPopularity()
          != other.getMaxPopularity()) return false;
      if (getLastPopularity()
          != other.getLastPopularity()) return false;
      if (getGoldCoin()
          != other.getGoldCoin()) return false;
      if (getSilverCoin()
          != other.getSilverCoin()) return false;
      if (!getTitle()
          .equals(other.getTitle())) return false;
      if (!getArea()
          .equals(other.getArea())) return false;
      if (!getCover()
          .equals(other.getCover())) return false;
      if (type_ != other.type_) return false;
      if (!getRealDanmakuUsersList()
          .equals(other.getRealDanmakuUsersList())) return false;
      if (!getLotteryDanmakuUsersList()
          .equals(other.getLotteryDanmakuUsersList())) return false;
      if (!internalGetGoldUsersAndCoin().equals(
          other.internalGetGoldUsersAndCoin())) return false;
      if (!internalGetSilverUsersAndCoin().equals(
          other.internalGetSilverUsersAndCoin())) return false;
      if (!getParticipatedUsersList()
          .equals(other.getParticipatedUsersList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ROOM_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRoomId();
      hash = (37 * hash) + START_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStart());
      hash = (37 * hash) + END_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEnd());
      hash = (37 * hash) + MAX_POPULARITY_FIELD_NUMBER;
      hash = (53 * hash) + getMaxPopularity();
      hash = (37 * hash) + LAST_POPULARITY_FIELD_NUMBER;
      hash = (53 * hash) + getLastPopularity();
      hash = (37 * hash) + GOLD_COIN_FIELD_NUMBER;
      hash = (53 * hash) + getGoldCoin();
      hash = (37 * hash) + SILVER_COIN_FIELD_NUMBER;
      hash = (53 * hash) + getSilverCoin();
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
      hash = (37 * hash) + AREA_FIELD_NUMBER;
      hash = (53 * hash) + getArea().hashCode();
      hash = (37 * hash) + COVER_FIELD_NUMBER;
      hash = (53 * hash) + getCover().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (getRealDanmakuUsersCount() > 0) {
        hash = (37 * hash) + REAL_DANMAKU_USERS_FIELD_NUMBER;
        hash = (53 * hash) + getRealDanmakuUsersList().hashCode();
      }
      if (getLotteryDanmakuUsersCount() > 0) {
        hash = (37 * hash) + LOTTERY_DANMAKU_USERS_FIELD_NUMBER;
        hash = (53 * hash) + getLotteryDanmakuUsersList().hashCode();
      }
      if (!internalGetGoldUsersAndCoin().getMap().isEmpty()) {
        hash = (37 * hash) + GOLD_USERS_AND_COIN_FIELD_NUMBER;
        hash = (53 * hash) + internalGetGoldUsersAndCoin().hashCode();
      }
      if (!internalGetSilverUsersAndCoin().getMap().isEmpty()) {
        hash = (37 * hash) + SILVER_USERS_AND_COIN_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSilverUsersAndCoin().hashCode();
      }
      if (getParticipatedUsersCount() > 0) {
        hash = (37 * hash) + PARTICIPATED_USERS_FIELD_NUMBER;
        hash = (53 * hash) + getParticipatedUsersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code vNerve.analyst.bilibili.live.BiLiveStatistic}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vNerve.analyst.bilibili.live.BiLiveStatistic)
        vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatisticOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vNerve.analyst.bilibili.live.BiliveAnalyst.internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 18:
            return internalGetGoldUsersAndCoin();
          case 19:
            return internalGetSilverUsersAndCoin();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 18:
            return internalGetMutableGoldUsersAndCoin();
          case 19:
            return internalGetMutableSilverUsersAndCoin();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vNerve.analyst.bilibili.live.BiliveAnalyst.internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic.class, vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic.Builder.class);
      }

      // Construct using vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        roomId_ = 0;

        start_ = 0L;

        end_ = 0L;

        maxPopularity_ = 0;

        lastPopularity_ = 0;

        goldCoin_ = 0;

        silverCoin_ = 0;

        title_ = "";

        area_ = "";

        cover_ = "";

        type_ = 0;

        realDanmakuUsers_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        lotteryDanmakuUsers_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableGoldUsersAndCoin().clear();
        internalGetMutableSilverUsersAndCoin().clear();
        participatedUsers_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vNerve.analyst.bilibili.live.BiliveAnalyst.internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_descriptor;
      }

      @java.lang.Override
      public vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic getDefaultInstanceForType() {
        return vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic.getDefaultInstance();
      }

      @java.lang.Override
      public vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic build() {
        vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic buildPartial() {
        vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic result = new vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic(this);
        int from_bitField0_ = bitField0_;
        result.roomId_ = roomId_;
        result.start_ = start_;
        result.end_ = end_;
        result.maxPopularity_ = maxPopularity_;
        result.lastPopularity_ = lastPopularity_;
        result.goldCoin_ = goldCoin_;
        result.silverCoin_ = silverCoin_;
        result.title_ = title_;
        result.area_ = area_;
        result.cover_ = cover_;
        result.type_ = type_;
        if (((bitField0_ & 0x00000001) != 0)) {
          realDanmakuUsers_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.realDanmakuUsers_ = realDanmakuUsers_;
        if (((bitField0_ & 0x00000002) != 0)) {
          lotteryDanmakuUsers_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.lotteryDanmakuUsers_ = lotteryDanmakuUsers_;
        result.goldUsersAndCoin_ = internalGetGoldUsersAndCoin();
        result.goldUsersAndCoin_.makeImmutable();
        result.silverUsersAndCoin_ = internalGetSilverUsersAndCoin();
        result.silverUsersAndCoin_.makeImmutable();
        if (((bitField0_ & 0x00000010) != 0)) {
          participatedUsers_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.participatedUsers_ = participatedUsers_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic) {
          return mergeFrom((vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic other) {
        if (other == vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic.getDefaultInstance()) return this;
        if (other.getRoomId() != 0) {
          setRoomId(other.getRoomId());
        }
        if (other.getStart() != 0L) {
          setStart(other.getStart());
        }
        if (other.getEnd() != 0L) {
          setEnd(other.getEnd());
        }
        if (other.getMaxPopularity() != 0) {
          setMaxPopularity(other.getMaxPopularity());
        }
        if (other.getLastPopularity() != 0) {
          setLastPopularity(other.getLastPopularity());
        }
        if (other.getGoldCoin() != 0) {
          setGoldCoin(other.getGoldCoin());
        }
        if (other.getSilverCoin() != 0) {
          setSilverCoin(other.getSilverCoin());
        }
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          onChanged();
        }
        if (!other.getArea().isEmpty()) {
          area_ = other.area_;
          onChanged();
        }
        if (!other.getCover().isEmpty()) {
          cover_ = other.cover_;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.realDanmakuUsers_.isEmpty()) {
          if (realDanmakuUsers_.isEmpty()) {
            realDanmakuUsers_ = other.realDanmakuUsers_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRealDanmakuUsersIsMutable();
            realDanmakuUsers_.addAll(other.realDanmakuUsers_);
          }
          onChanged();
        }
        if (!other.lotteryDanmakuUsers_.isEmpty()) {
          if (lotteryDanmakuUsers_.isEmpty()) {
            lotteryDanmakuUsers_ = other.lotteryDanmakuUsers_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureLotteryDanmakuUsersIsMutable();
            lotteryDanmakuUsers_.addAll(other.lotteryDanmakuUsers_);
          }
          onChanged();
        }
        internalGetMutableGoldUsersAndCoin().mergeFrom(
            other.internalGetGoldUsersAndCoin());
        internalGetMutableSilverUsersAndCoin().mergeFrom(
            other.internalGetSilverUsersAndCoin());
        if (!other.participatedUsers_.isEmpty()) {
          if (participatedUsers_.isEmpty()) {
            participatedUsers_ = other.participatedUsers_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureParticipatedUsersIsMutable();
            participatedUsers_.addAll(other.participatedUsers_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int roomId_ ;
      /**
       * <code>uint32 room_id = 1;</code>
       * @return The roomId.
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>uint32 room_id = 1;</code>
       * @param value The roomId to set.
       * @return This builder for chaining.
       */
      public Builder setRoomId(int value) {
        
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 room_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoomId() {
        
        roomId_ = 0;
        onChanged();
        return this;
      }

      private long start_ ;
      /**
       * <code>uint64 start = 2;</code>
       * @return The start.
       */
      public long getStart() {
        return start_;
      }
      /**
       * <code>uint64 start = 2;</code>
       * @param value The start to set.
       * @return This builder for chaining.
       */
      public Builder setStart(long value) {
        
        start_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 start = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStart() {
        
        start_ = 0L;
        onChanged();
        return this;
      }

      private long end_ ;
      /**
       * <code>uint64 end = 3;</code>
       * @return The end.
       */
      public long getEnd() {
        return end_;
      }
      /**
       * <code>uint64 end = 3;</code>
       * @param value The end to set.
       * @return This builder for chaining.
       */
      public Builder setEnd(long value) {
        
        end_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 end = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnd() {
        
        end_ = 0L;
        onChanged();
        return this;
      }

      private int maxPopularity_ ;
      /**
       * <code>uint32 max_popularity = 4;</code>
       * @return The maxPopularity.
       */
      public int getMaxPopularity() {
        return maxPopularity_;
      }
      /**
       * <code>uint32 max_popularity = 4;</code>
       * @param value The maxPopularity to set.
       * @return This builder for chaining.
       */
      public Builder setMaxPopularity(int value) {
        
        maxPopularity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 max_popularity = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxPopularity() {
        
        maxPopularity_ = 0;
        onChanged();
        return this;
      }

      private int lastPopularity_ ;
      /**
       * <code>uint32 last_popularity = 5;</code>
       * @return The lastPopularity.
       */
      public int getLastPopularity() {
        return lastPopularity_;
      }
      /**
       * <code>uint32 last_popularity = 5;</code>
       * @param value The lastPopularity to set.
       * @return This builder for chaining.
       */
      public Builder setLastPopularity(int value) {
        
        lastPopularity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 last_popularity = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastPopularity() {
        
        lastPopularity_ = 0;
        onChanged();
        return this;
      }

      private int goldCoin_ ;
      /**
       * <code>uint32 gold_coin = 6;</code>
       * @return The goldCoin.
       */
      public int getGoldCoin() {
        return goldCoin_;
      }
      /**
       * <code>uint32 gold_coin = 6;</code>
       * @param value The goldCoin to set.
       * @return This builder for chaining.
       */
      public Builder setGoldCoin(int value) {
        
        goldCoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 gold_coin = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearGoldCoin() {
        
        goldCoin_ = 0;
        onChanged();
        return this;
      }

      private int silverCoin_ ;
      /**
       * <code>uint32 silver_coin = 7;</code>
       * @return The silverCoin.
       */
      public int getSilverCoin() {
        return silverCoin_;
      }
      /**
       * <code>uint32 silver_coin = 7;</code>
       * @param value The silverCoin to set.
       * @return This builder for chaining.
       */
      public Builder setSilverCoin(int value) {
        
        silverCoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 silver_coin = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSilverCoin() {
        
        silverCoin_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object title_ = "";
      /**
       * <code>string title = 8;</code>
       * @return The title.
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string title = 8;</code>
       * @return The bytes for title.
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string title = 8;</code>
       * @param value The title to set.
       * @return This builder for chaining.
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string title = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTitle() {
        
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>string title = 8;</code>
       * @param value The bytes for title to set.
       * @return This builder for chaining.
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        title_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object area_ = "";
      /**
       * <code>string area = 9;</code>
       * @return The area.
       */
      public java.lang.String getArea() {
        java.lang.Object ref = area_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          area_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string area = 9;</code>
       * @return The bytes for area.
       */
      public com.google.protobuf.ByteString
          getAreaBytes() {
        java.lang.Object ref = area_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          area_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string area = 9;</code>
       * @param value The area to set.
       * @return This builder for chaining.
       */
      public Builder setArea(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        area_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string area = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearArea() {
        
        area_ = getDefaultInstance().getArea();
        onChanged();
        return this;
      }
      /**
       * <code>string area = 9;</code>
       * @param value The bytes for area to set.
       * @return This builder for chaining.
       */
      public Builder setAreaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        area_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object cover_ = "";
      /**
       * <code>string cover = 10;</code>
       * @return The cover.
       */
      public java.lang.String getCover() {
        java.lang.Object ref = cover_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cover_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string cover = 10;</code>
       * @return The bytes for cover.
       */
      public com.google.protobuf.ByteString
          getCoverBytes() {
        java.lang.Object ref = cover_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cover_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string cover = 10;</code>
       * @param value The cover to set.
       * @return This builder for chaining.
       */
      public Builder setCover(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cover_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string cover = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearCover() {
        
        cover_ = getDefaultInstance().getCover();
        onChanged();
        return this;
      }
      /**
       * <code>string cover = 10;</code>
       * @param value The bytes for cover to set.
       * @return This builder for chaining.
       */
      public Builder setCoverBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cover_ = value;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.vNerve.analyst.bilibili.live.BiLiveStatisticType type = 11;</code>
       * @return The enum numeric value on the wire for type.
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.vNerve.analyst.bilibili.live.BiLiveStatisticType type = 11;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.vNerve.analyst.bilibili.live.BiLiveStatisticType type = 11;</code>
       * @return The type.
       */
      public vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatisticType getType() {
        @SuppressWarnings("deprecation")
        vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatisticType result = vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatisticType.valueOf(type_);
        return result == null ? vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatisticType.UNRECOGNIZED : result;
      }
      /**
       * <code>.vNerve.analyst.bilibili.live.BiLiveStatisticType type = 11;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatisticType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.vNerve.analyst.bilibili.live.BiLiveStatisticType type = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList realDanmakuUsers_ = emptyLongList();
      private void ensureRealDanmakuUsersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          realDanmakuUsers_ = mutableCopy(realDanmakuUsers_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint64 real_danmaku_users = 16;</code>
       * @return A list containing the realDanmakuUsers.
       */
      public java.util.List<java.lang.Long>
          getRealDanmakuUsersList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(realDanmakuUsers_) : realDanmakuUsers_;
      }
      /**
       * <code>repeated uint64 real_danmaku_users = 16;</code>
       * @return The count of realDanmakuUsers.
       */
      public int getRealDanmakuUsersCount() {
        return realDanmakuUsers_.size();
      }
      /**
       * <code>repeated uint64 real_danmaku_users = 16;</code>
       * @param index The index of the element to return.
       * @return The realDanmakuUsers at the given index.
       */
      public long getRealDanmakuUsers(int index) {
        return realDanmakuUsers_.getLong(index);
      }
      /**
       * <code>repeated uint64 real_danmaku_users = 16;</code>
       * @param index The index to set the value at.
       * @param value The realDanmakuUsers to set.
       * @return This builder for chaining.
       */
      public Builder setRealDanmakuUsers(
          int index, long value) {
        ensureRealDanmakuUsersIsMutable();
        realDanmakuUsers_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 real_danmaku_users = 16;</code>
       * @param value The realDanmakuUsers to add.
       * @return This builder for chaining.
       */
      public Builder addRealDanmakuUsers(long value) {
        ensureRealDanmakuUsersIsMutable();
        realDanmakuUsers_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 real_danmaku_users = 16;</code>
       * @param values The realDanmakuUsers to add.
       * @return This builder for chaining.
       */
      public Builder addAllRealDanmakuUsers(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRealDanmakuUsersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, realDanmakuUsers_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 real_danmaku_users = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearRealDanmakuUsers() {
        realDanmakuUsers_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList lotteryDanmakuUsers_ = emptyLongList();
      private void ensureLotteryDanmakuUsersIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          lotteryDanmakuUsers_ = mutableCopy(lotteryDanmakuUsers_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint64 lottery_danmaku_users = 17;</code>
       * @return A list containing the lotteryDanmakuUsers.
       */
      public java.util.List<java.lang.Long>
          getLotteryDanmakuUsersList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(lotteryDanmakuUsers_) : lotteryDanmakuUsers_;
      }
      /**
       * <code>repeated uint64 lottery_danmaku_users = 17;</code>
       * @return The count of lotteryDanmakuUsers.
       */
      public int getLotteryDanmakuUsersCount() {
        return lotteryDanmakuUsers_.size();
      }
      /**
       * <code>repeated uint64 lottery_danmaku_users = 17;</code>
       * @param index The index of the element to return.
       * @return The lotteryDanmakuUsers at the given index.
       */
      public long getLotteryDanmakuUsers(int index) {
        return lotteryDanmakuUsers_.getLong(index);
      }
      /**
       * <code>repeated uint64 lottery_danmaku_users = 17;</code>
       * @param index The index to set the value at.
       * @param value The lotteryDanmakuUsers to set.
       * @return This builder for chaining.
       */
      public Builder setLotteryDanmakuUsers(
          int index, long value) {
        ensureLotteryDanmakuUsersIsMutable();
        lotteryDanmakuUsers_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 lottery_danmaku_users = 17;</code>
       * @param value The lotteryDanmakuUsers to add.
       * @return This builder for chaining.
       */
      public Builder addLotteryDanmakuUsers(long value) {
        ensureLotteryDanmakuUsersIsMutable();
        lotteryDanmakuUsers_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 lottery_danmaku_users = 17;</code>
       * @param values The lotteryDanmakuUsers to add.
       * @return This builder for chaining.
       */
      public Builder addAllLotteryDanmakuUsers(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureLotteryDanmakuUsersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lotteryDanmakuUsers_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 lottery_danmaku_users = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearLotteryDanmakuUsers() {
        lotteryDanmakuUsers_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Integer> goldUsersAndCoin_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetGoldUsersAndCoin() {
        if (goldUsersAndCoin_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              GoldUsersAndCoinDefaultEntryHolder.defaultEntry);
        }
        return goldUsersAndCoin_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetMutableGoldUsersAndCoin() {
        onChanged();;
        if (goldUsersAndCoin_ == null) {
          goldUsersAndCoin_ = com.google.protobuf.MapField.newMapField(
              GoldUsersAndCoinDefaultEntryHolder.defaultEntry);
        }
        if (!goldUsersAndCoin_.isMutable()) {
          goldUsersAndCoin_ = goldUsersAndCoin_.copy();
        }
        return goldUsersAndCoin_;
      }

      public int getGoldUsersAndCoinCount() {
        return internalGetGoldUsersAndCoin().getMap().size();
      }
      /**
       * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
       */

      public boolean containsGoldUsersAndCoin(
          long key) {
        
        return internalGetGoldUsersAndCoin().getMap().containsKey(key);
      }
      /**
       * Use {@link #getGoldUsersAndCoinMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer> getGoldUsersAndCoin() {
        return getGoldUsersAndCoinMap();
      }
      /**
       * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
       */

      public java.util.Map<java.lang.Long, java.lang.Integer> getGoldUsersAndCoinMap() {
        return internalGetGoldUsersAndCoin().getMap();
      }
      /**
       * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
       */

      public int getGoldUsersAndCoinOrDefault(
          long key,
          int defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetGoldUsersAndCoin().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
       */

      public int getGoldUsersAndCoinOrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetGoldUsersAndCoin().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearGoldUsersAndCoin() {
        internalGetMutableGoldUsersAndCoin().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
       */

      public Builder removeGoldUsersAndCoin(
          long key) {
        
        internalGetMutableGoldUsersAndCoin().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer>
      getMutableGoldUsersAndCoin() {
        return internalGetMutableGoldUsersAndCoin().getMutableMap();
      }
      /**
       * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
       */
      public Builder putGoldUsersAndCoin(
          long key,
          int value) {
        
        
        internalGetMutableGoldUsersAndCoin().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint64, uint32&gt; gold_users_and_coin = 18;</code>
       */

      public Builder putAllGoldUsersAndCoin(
          java.util.Map<java.lang.Long, java.lang.Integer> values) {
        internalGetMutableGoldUsersAndCoin().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Integer> silverUsersAndCoin_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetSilverUsersAndCoin() {
        if (silverUsersAndCoin_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SilverUsersAndCoinDefaultEntryHolder.defaultEntry);
        }
        return silverUsersAndCoin_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetMutableSilverUsersAndCoin() {
        onChanged();;
        if (silverUsersAndCoin_ == null) {
          silverUsersAndCoin_ = com.google.protobuf.MapField.newMapField(
              SilverUsersAndCoinDefaultEntryHolder.defaultEntry);
        }
        if (!silverUsersAndCoin_.isMutable()) {
          silverUsersAndCoin_ = silverUsersAndCoin_.copy();
        }
        return silverUsersAndCoin_;
      }

      public int getSilverUsersAndCoinCount() {
        return internalGetSilverUsersAndCoin().getMap().size();
      }
      /**
       * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
       */

      public boolean containsSilverUsersAndCoin(
          long key) {
        
        return internalGetSilverUsersAndCoin().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSilverUsersAndCoinMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer> getSilverUsersAndCoin() {
        return getSilverUsersAndCoinMap();
      }
      /**
       * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
       */

      public java.util.Map<java.lang.Long, java.lang.Integer> getSilverUsersAndCoinMap() {
        return internalGetSilverUsersAndCoin().getMap();
      }
      /**
       * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
       */

      public int getSilverUsersAndCoinOrDefault(
          long key,
          int defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetSilverUsersAndCoin().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
       */

      public int getSilverUsersAndCoinOrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetSilverUsersAndCoin().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearSilverUsersAndCoin() {
        internalGetMutableSilverUsersAndCoin().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
       */

      public Builder removeSilverUsersAndCoin(
          long key) {
        
        internalGetMutableSilverUsersAndCoin().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer>
      getMutableSilverUsersAndCoin() {
        return internalGetMutableSilverUsersAndCoin().getMutableMap();
      }
      /**
       * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
       */
      public Builder putSilverUsersAndCoin(
          long key,
          int value) {
        
        
        internalGetMutableSilverUsersAndCoin().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint64, uint32&gt; silver_users_and_coin = 19;</code>
       */

      public Builder putAllSilverUsersAndCoin(
          java.util.Map<java.lang.Long, java.lang.Integer> values) {
        internalGetMutableSilverUsersAndCoin().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.Internal.LongList participatedUsers_ = emptyLongList();
      private void ensureParticipatedUsersIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          participatedUsers_ = mutableCopy(participatedUsers_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint64 participated_users = 20;</code>
       * @return A list containing the participatedUsers.
       */
      public java.util.List<java.lang.Long>
          getParticipatedUsersList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(participatedUsers_) : participatedUsers_;
      }
      /**
       * <code>repeated uint64 participated_users = 20;</code>
       * @return The count of participatedUsers.
       */
      public int getParticipatedUsersCount() {
        return participatedUsers_.size();
      }
      /**
       * <code>repeated uint64 participated_users = 20;</code>
       * @param index The index of the element to return.
       * @return The participatedUsers at the given index.
       */
      public long getParticipatedUsers(int index) {
        return participatedUsers_.getLong(index);
      }
      /**
       * <code>repeated uint64 participated_users = 20;</code>
       * @param index The index to set the value at.
       * @param value The participatedUsers to set.
       * @return This builder for chaining.
       */
      public Builder setParticipatedUsers(
          int index, long value) {
        ensureParticipatedUsersIsMutable();
        participatedUsers_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 participated_users = 20;</code>
       * @param value The participatedUsers to add.
       * @return This builder for chaining.
       */
      public Builder addParticipatedUsers(long value) {
        ensureParticipatedUsersIsMutable();
        participatedUsers_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 participated_users = 20;</code>
       * @param values The participatedUsers to add.
       * @return This builder for chaining.
       */
      public Builder addAllParticipatedUsers(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureParticipatedUsersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, participatedUsers_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 participated_users = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearParticipatedUsers() {
        participatedUsers_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vNerve.analyst.bilibili.live.BiLiveStatistic)
    }

    // @@protoc_insertion_point(class_scope:vNerve.analyst.bilibili.live.BiLiveStatistic)
    private static final vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic();
    }

    public static vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BiLiveStatistic>
        PARSER = new com.google.protobuf.AbstractParser<BiLiveStatistic>() {
      @java.lang.Override
      public BiLiveStatistic parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BiLiveStatistic(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BiLiveStatistic> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BiLiveStatistic> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public vNerve.analyst.bilibili.live.BiliveAnalyst.BiLiveStatistic getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_GoldUsersAndCoinEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_GoldUsersAndCoinEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_SilverUsersAndCoinEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_SilverUsersAndCoinEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n1vNerve/analyst/bilibili/live/bilive_an" +
      "alyst.proto\022\034vNerve.analyst.bilibili.liv" +
      "e\"\227\005\n\017BiLiveStatistic\022\017\n\007room_id\030\001 \001(\r\022\r" +
      "\n\005start\030\002 \001(\004\022\013\n\003end\030\003 \001(\004\022\026\n\016max_popula" +
      "rity\030\004 \001(\r\022\027\n\017last_popularity\030\005 \001(\r\022\021\n\tg" +
      "old_coin\030\006 \001(\r\022\023\n\013silver_coin\030\007 \001(\r\022\r\n\005t" +
      "itle\030\010 \001(\t\022\014\n\004area\030\t \001(\t\022\r\n\005cover\030\n \001(\t\022" +
      "?\n\004type\030\013 \001(\01621.vNerve.analyst.bilibili." +
      "live.BiLiveStatisticType\022\032\n\022real_danmaku" +
      "_users\030\020 \003(\004\022\035\n\025lottery_danmaku_users\030\021 " +
      "\003(\004\022`\n\023gold_users_and_coin\030\022 \003(\0132C.vNerv" +
      "e.analyst.bilibili.live.BiLiveStatistic." +
      "GoldUsersAndCoinEntry\022d\n\025silver_users_an" +
      "d_coin\030\023 \003(\0132E.vNerve.analyst.bilibili.l" +
      "ive.BiLiveStatistic.SilverUsersAndCoinEn" +
      "try\022\032\n\022participated_users\030\024 \003(\004\0327\n\025GoldU" +
      "sersAndCoinEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002" +
      " \001(\r:\0028\001\0329\n\027SilverUsersAndCoinEntry\022\013\n\003k" +
      "ey\030\001 \001(\004\022\r\n\005value\030\002 \001(\r:\0028\001*-\n\023BiLiveSta" +
      "tisticType\022\t\n\005SLICE\020\000\022\013\n\007SESSION\020\001b\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_descriptor,
        new java.lang.String[] { "RoomId", "Start", "End", "MaxPopularity", "LastPopularity", "GoldCoin", "SilverCoin", "Title", "Area", "Cover", "Type", "RealDanmakuUsers", "LotteryDanmakuUsers", "GoldUsersAndCoin", "SilverUsersAndCoin", "ParticipatedUsers", });
    internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_GoldUsersAndCoinEntry_descriptor =
      internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_descriptor.getNestedTypes().get(0);
    internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_GoldUsersAndCoinEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_GoldUsersAndCoinEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_SilverUsersAndCoinEntry_descriptor =
      internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_descriptor.getNestedTypes().get(1);
    internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_SilverUsersAndCoinEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vNerve_analyst_bilibili_live_BiLiveStatistic_SilverUsersAndCoinEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
