// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: vNerve/bilibili/live/room_message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace VNerve.Bilibili.Live {

  /// <summary>Holder for reflection information generated from vNerve/bilibili/live/room_message.proto</summary>
  public static partial class RoomMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for vNerve/bilibili/live/room_message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RoomMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cid2TmVydmUvYmlsaWJpbGkvbGl2ZS9yb29tX21lc3NhZ2UucHJvdG8SFHZO",
            "ZXJ2ZS5iaWxpYmlsaS5saXZlGid2TmVydmUvYmlsaWJpbGkvbGl2ZS91c2Vy",
            "X21lc3NhZ2UucHJvdG8iywQKC1Jvb21NZXNzYWdlEg8KB3Jvb21faWQYASAB",
            "KA0SOQoMdXNlcl9tZXNzYWdlGAIgASgLMiEudk5lcnZlLmJpbGliaWxpLmxp",
            "dmUuVXNlck1lc3NhZ2VIABJLChFwb3B1bGFyaXR5X2NoYW5nZRgDIAEoCzIu",
            "LnZOZXJ2ZS5iaWxpYmlsaS5saXZlLlBvcHVsYXJpdHlDaGFuZ2VkTWVzc2Fn",
            "ZUgAEkUKC2xpdmVfc3RhdHVzGBAgASgLMi4udk5lcnZlLmJpbGliaWxpLmxp",
            "dmUuTGl2ZVN0YXR1c0NoYW5nZWRNZXNzYWdlSAASQwoLaW5mb19jaGFuZ2UY",
            "ESABKAsyLC52TmVydmUuYmlsaWJpbGkubGl2ZS5Sb29tSW5mb0NoYW5nZWRN",
            "ZXNzYWdlSAASPgoLcm9vbV9sb2NrZWQYEiABKAsyJy52TmVydmUuYmlsaWJp",
            "bGkubGl2ZS5Sb29tTG9ja2VkTWVzc2FnZUgAEkAKDHJvb21fd2FybmluZxgT",
            "IAEoCzIoLnZOZXJ2ZS5iaWxpYmlsaS5saXZlLlJvb21XYXJuaW5nTWVzc2Fn",
            "ZUgAEkAKDHJvb21fbGltaXRlZBgUIAEoCzIoLnZOZXJ2ZS5iaWxpYmlsaS5s",
            "aXZlLlJvb21MaW1pdGVkTWVzc2FnZUgAEkgKEHN1cGVyY2hhdF9kZWxldGUY",
            "FSABKAsyLC52TmVydmUuYmlsaWJpbGkubGl2ZS5TdXBlckNoYXREZWxldGVN",
            "ZXNzYWdlSABCCQoHcGF5bG9hZCIuChhQb3B1bGFyaXR5Q2hhbmdlZE1lc3Nh",
            "Z2USEgoKcG9wdWxhcml0eRgBIAEoDSJdChhMaXZlU3RhdHVzQ2hhbmdlZE1l",
            "c3NhZ2USMAoGc3RhdHVzGAEgASgOMiAudk5lcnZlLmJpbGliaWxpLmxpdmUu",
            "TGl2ZVN0YXR1cxIPCgdtZXNzYWdlGAIgASgJIr8BChZSb29tSW5mb0NoYW5n",
            "ZWRNZXNzYWdlEjcKCWJhc2VfaW5mbxgBIAEoCzIiLnZOZXJ2ZS5iaWxpYmls",
            "aS5saXZlLlJvb21CYXNlSW5mb0gAEhgKDmJhY2tncm91bmRfdXJsGAIgASgJ",
            "SAASEQoHc2tpbl9pZBgDIAEoDUgAEjQKBWFkbWluGAQgASgLMiMudk5lcnZl",
            "LmJpbGliaWxpLmxpdmUuUm9vbUFkbWluSW5mb0gAQgkKB2NoYW5nZWQicwoM",
            "Um9vbUJhc2VJbmZvEg0KBXRpdGxlGAEgASgJEg8KB2FyZWFfaWQYAiABKA0S",
            "EQoJYXJlYV9uYW1lGAMgASgJEhYKDnBhcmVudF9hcmVhX2lkGAQgASgNEhgK",
            "EHBhcmVudF9hcmVhX25hbWUYBSABKAkiHAoNUm9vbUFkbWluSW5mbxILCgN1",
            "aWQYASADKAQiKQoRUm9vbUxvY2tlZE1lc3NhZ2USFAoMbG9ja2VkX3VudGls",
            "GAEgASgEIiUKElJvb21XYXJuaW5nTWVzc2FnZRIPCgdtZXNzYWdlGAEgASgJ",
            "IjcKElJvb21MaW1pdGVkTWVzc2FnZRIMCgR0eXBlGAEgASgJEhMKC2RlbGF5",
            "X3JhbmdlGAIgASgNIiQKFlN1cGVyQ2hhdERlbGV0ZU1lc3NhZ2USCgoCaWQY",
            "ASADKAQqPQoKTGl2ZVN0YXR1cxINCglQUkVQQVJJTkcQABIICgRMSVZFEAES",
            "CQoFUk9VTkQQAhILCgdDVVRfT0ZGEANCA/gBAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::VNerve.Bilibili.Live.UserMessageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::VNerve.Bilibili.Live.LiveStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.Live.RoomMessage), global::VNerve.Bilibili.Live.RoomMessage.Parser, new[]{ "RoomId", "UserMessage", "PopularityChange", "LiveStatus", "InfoChange", "RoomLocked", "RoomWarning", "RoomLimited", "SuperchatDelete" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.Live.PopularityChangedMessage), global::VNerve.Bilibili.Live.PopularityChangedMessage.Parser, new[]{ "Popularity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.Live.LiveStatusChangedMessage), global::VNerve.Bilibili.Live.LiveStatusChangedMessage.Parser, new[]{ "Status", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.Live.RoomInfoChangedMessage), global::VNerve.Bilibili.Live.RoomInfoChangedMessage.Parser, new[]{ "BaseInfo", "BackgroundUrl", "SkinId", "Admin" }, new[]{ "Changed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.Live.RoomBaseInfo), global::VNerve.Bilibili.Live.RoomBaseInfo.Parser, new[]{ "Title", "AreaId", "AreaName", "ParentAreaId", "ParentAreaName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.Live.RoomAdminInfo), global::VNerve.Bilibili.Live.RoomAdminInfo.Parser, new[]{ "Uid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.Live.RoomLockedMessage), global::VNerve.Bilibili.Live.RoomLockedMessage.Parser, new[]{ "LockedUntil" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.Live.RoomWarningMessage), global::VNerve.Bilibili.Live.RoomWarningMessage.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.Live.RoomLimitedMessage), global::VNerve.Bilibili.Live.RoomLimitedMessage.Parser, new[]{ "Type", "DelayRange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.Live.SuperChatDeleteMessage), global::VNerve.Bilibili.Live.SuperChatDeleteMessage.Parser, new[]{ "Id" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  //// 直播间上下播状态
  /// </summary>
  public enum LiveStatus {
    /// <summary>
    /// 下播
    /// </summary>
    [pbr::OriginalName("PREPARING")] Preparing = 0,
    /// <summary>
    /// 上播
    /// </summary>
    [pbr::OriginalName("LIVE")] Live = 1,
    /// <summary>
    /// 轮播（亦应该视为下播）
    /// </summary>
    [pbr::OriginalName("ROUND")] Round = 2,
    /// <summary>
    /// 被切断 // TODO: 被切断时候是否有 PREPARING?
    /// </summary>
    [pbr::OriginalName("CUT_OFF")] CutOff = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  ///*
  ///BiLive 所有消息的根消息
  /// </summary>
  public sealed partial class RoomMessage : pb::IMessage<RoomMessage> {
    private static readonly pb::MessageParser<RoomMessage> _parser = new pb::MessageParser<RoomMessage>(() => new RoomMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.Live.RoomMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomMessage(RoomMessage other) : this() {
      roomId_ = other.roomId_;
      switch (other.PayloadCase) {
        case PayloadOneofCase.UserMessage:
          UserMessage = other.UserMessage.Clone();
          break;
        case PayloadOneofCase.PopularityChange:
          PopularityChange = other.PopularityChange.Clone();
          break;
        case PayloadOneofCase.LiveStatus:
          LiveStatus = other.LiveStatus.Clone();
          break;
        case PayloadOneofCase.InfoChange:
          InfoChange = other.InfoChange.Clone();
          break;
        case PayloadOneofCase.RoomLocked:
          RoomLocked = other.RoomLocked.Clone();
          break;
        case PayloadOneofCase.RoomWarning:
          RoomWarning = other.RoomWarning.Clone();
          break;
        case PayloadOneofCase.RoomLimited:
          RoomLimited = other.RoomLimited.Clone();
          break;
        case PayloadOneofCase.SuperchatDelete:
          SuperchatDelete = other.SuperchatDelete.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomMessage Clone() {
      return new RoomMessage(this);
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private uint roomId_;
    /// <summary>
    //// 本消息对应的直播间号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "user_message" field.</summary>
    public const int UserMessageFieldNumber = 2;
    /// <summary>
    /// 所有由用户引起的消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.Live.UserMessage UserMessage {
      get { return payloadCase_ == PayloadOneofCase.UserMessage ? (global::VNerve.Bilibili.Live.UserMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.UserMessage;
      }
    }

    /// <summary>Field number for the "popularity_change" field.</summary>
    public const int PopularityChangeFieldNumber = 3;
    /// <summary>
    ///*
    ///直播间人气值更新
    ///
    ///此消息每房间约一分钟发送一条。
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.Live.PopularityChangedMessage PopularityChange {
      get { return payloadCase_ == PayloadOneofCase.PopularityChange ? (global::VNerve.Bilibili.Live.PopularityChangedMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PopularityChange;
      }
    }

    /// <summary>Field number for the "live_status" field.</summary>
    public const int LiveStatusFieldNumber = 16;
    /// <summary>
    /// 直播间上下播
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.Live.LiveStatusChangedMessage LiveStatus {
      get { return payloadCase_ == PayloadOneofCase.LiveStatus ? (global::VNerve.Bilibili.Live.LiveStatusChangedMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.LiveStatus;
      }
    }

    /// <summary>Field number for the "info_change" field.</summary>
    public const int InfoChangeFieldNumber = 17;
    /// <summary>
    /// 直播间信息变更（包括房管）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.Live.RoomInfoChangedMessage InfoChange {
      get { return payloadCase_ == PayloadOneofCase.InfoChange ? (global::VNerve.Bilibili.Live.RoomInfoChangedMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.InfoChange;
      }
    }

    /// <summary>Field number for the "room_locked" field.</summary>
    public const int RoomLockedFieldNumber = 18;
    /// <summary>
    /// 直播间被封禁/锁定
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.Live.RoomLockedMessage RoomLocked {
      get { return payloadCase_ == PayloadOneofCase.RoomLocked ? (global::VNerve.Bilibili.Live.RoomLockedMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RoomLocked;
      }
    }

    /// <summary>Field number for the "room_warning" field.</summary>
    public const int RoomWarningFieldNumber = 19;
    /// <summary>
    /// 直播间被警告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.Live.RoomWarningMessage RoomWarning {
      get { return payloadCase_ == PayloadOneofCase.RoomWarning ? (global::VNerve.Bilibili.Live.RoomWarningMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RoomWarning;
      }
    }

    /// <summary>Field number for the "room_limited" field.</summary>
    public const int RoomLimitedFieldNumber = 20;
    /// <summary>
    /// 直播间受限（版权等）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.Live.RoomLimitedMessage RoomLimited {
      get { return payloadCase_ == PayloadOneofCase.RoomLimited ? (global::VNerve.Bilibili.Live.RoomLimitedMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RoomLimited;
      }
    }

    /// <summary>Field number for the "superchat_delete" field.</summary>
    public const int SuperchatDeleteFieldNumber = 21;
    /// <summary>
    /// 删除 Super Chat（房管操作）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.Live.SuperChatDeleteMessage SuperchatDelete {
      get { return payloadCase_ == PayloadOneofCase.SuperchatDelete ? (global::VNerve.Bilibili.Live.SuperChatDeleteMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SuperchatDelete;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      UserMessage = 2,
      PopularityChange = 3,
      LiveStatus = 16,
      InfoChange = 17,
      RoomLocked = 18,
      RoomWarning = 19,
      RoomLimited = 20,
      SuperchatDelete = 21,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (!object.Equals(UserMessage, other.UserMessage)) return false;
      if (!object.Equals(PopularityChange, other.PopularityChange)) return false;
      if (!object.Equals(LiveStatus, other.LiveStatus)) return false;
      if (!object.Equals(InfoChange, other.InfoChange)) return false;
      if (!object.Equals(RoomLocked, other.RoomLocked)) return false;
      if (!object.Equals(RoomWarning, other.RoomWarning)) return false;
      if (!object.Equals(RoomLimited, other.RoomLimited)) return false;
      if (!object.Equals(SuperchatDelete, other.SuperchatDelete)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.UserMessage) hash ^= UserMessage.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.PopularityChange) hash ^= PopularityChange.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.LiveStatus) hash ^= LiveStatus.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.InfoChange) hash ^= InfoChange.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RoomLocked) hash ^= RoomLocked.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RoomWarning) hash ^= RoomWarning.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RoomLimited) hash ^= RoomLimited.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SuperchatDelete) hash ^= SuperchatDelete.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RoomId);
      }
      if (payloadCase_ == PayloadOneofCase.UserMessage) {
        output.WriteRawTag(18);
        output.WriteMessage(UserMessage);
      }
      if (payloadCase_ == PayloadOneofCase.PopularityChange) {
        output.WriteRawTag(26);
        output.WriteMessage(PopularityChange);
      }
      if (payloadCase_ == PayloadOneofCase.LiveStatus) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(LiveStatus);
      }
      if (payloadCase_ == PayloadOneofCase.InfoChange) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(InfoChange);
      }
      if (payloadCase_ == PayloadOneofCase.RoomLocked) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RoomLocked);
      }
      if (payloadCase_ == PayloadOneofCase.RoomWarning) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(RoomWarning);
      }
      if (payloadCase_ == PayloadOneofCase.RoomLimited) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(RoomLimited);
      }
      if (payloadCase_ == PayloadOneofCase.SuperchatDelete) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(SuperchatDelete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      if (payloadCase_ == PayloadOneofCase.UserMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMessage);
      }
      if (payloadCase_ == PayloadOneofCase.PopularityChange) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PopularityChange);
      }
      if (payloadCase_ == PayloadOneofCase.LiveStatus) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LiveStatus);
      }
      if (payloadCase_ == PayloadOneofCase.InfoChange) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(InfoChange);
      }
      if (payloadCase_ == PayloadOneofCase.RoomLocked) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoomLocked);
      }
      if (payloadCase_ == PayloadOneofCase.RoomWarning) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoomWarning);
      }
      if (payloadCase_ == PayloadOneofCase.RoomLimited) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoomLimited);
      }
      if (payloadCase_ == PayloadOneofCase.SuperchatDelete) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SuperchatDelete);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomMessage other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.UserMessage:
          if (UserMessage == null) {
            UserMessage = new global::VNerve.Bilibili.Live.UserMessage();
          }
          UserMessage.MergeFrom(other.UserMessage);
          break;
        case PayloadOneofCase.PopularityChange:
          if (PopularityChange == null) {
            PopularityChange = new global::VNerve.Bilibili.Live.PopularityChangedMessage();
          }
          PopularityChange.MergeFrom(other.PopularityChange);
          break;
        case PayloadOneofCase.LiveStatus:
          if (LiveStatus == null) {
            LiveStatus = new global::VNerve.Bilibili.Live.LiveStatusChangedMessage();
          }
          LiveStatus.MergeFrom(other.LiveStatus);
          break;
        case PayloadOneofCase.InfoChange:
          if (InfoChange == null) {
            InfoChange = new global::VNerve.Bilibili.Live.RoomInfoChangedMessage();
          }
          InfoChange.MergeFrom(other.InfoChange);
          break;
        case PayloadOneofCase.RoomLocked:
          if (RoomLocked == null) {
            RoomLocked = new global::VNerve.Bilibili.Live.RoomLockedMessage();
          }
          RoomLocked.MergeFrom(other.RoomLocked);
          break;
        case PayloadOneofCase.RoomWarning:
          if (RoomWarning == null) {
            RoomWarning = new global::VNerve.Bilibili.Live.RoomWarningMessage();
          }
          RoomWarning.MergeFrom(other.RoomWarning);
          break;
        case PayloadOneofCase.RoomLimited:
          if (RoomLimited == null) {
            RoomLimited = new global::VNerve.Bilibili.Live.RoomLimitedMessage();
          }
          RoomLimited.MergeFrom(other.RoomLimited);
          break;
        case PayloadOneofCase.SuperchatDelete:
          if (SuperchatDelete == null) {
            SuperchatDelete = new global::VNerve.Bilibili.Live.SuperChatDeleteMessage();
          }
          SuperchatDelete.MergeFrom(other.SuperchatDelete);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadUInt32();
            break;
          }
          case 18: {
            global::VNerve.Bilibili.Live.UserMessage subBuilder = new global::VNerve.Bilibili.Live.UserMessage();
            if (payloadCase_ == PayloadOneofCase.UserMessage) {
              subBuilder.MergeFrom(UserMessage);
            }
            input.ReadMessage(subBuilder);
            UserMessage = subBuilder;
            break;
          }
          case 26: {
            global::VNerve.Bilibili.Live.PopularityChangedMessage subBuilder = new global::VNerve.Bilibili.Live.PopularityChangedMessage();
            if (payloadCase_ == PayloadOneofCase.PopularityChange) {
              subBuilder.MergeFrom(PopularityChange);
            }
            input.ReadMessage(subBuilder);
            PopularityChange = subBuilder;
            break;
          }
          case 130: {
            global::VNerve.Bilibili.Live.LiveStatusChangedMessage subBuilder = new global::VNerve.Bilibili.Live.LiveStatusChangedMessage();
            if (payloadCase_ == PayloadOneofCase.LiveStatus) {
              subBuilder.MergeFrom(LiveStatus);
            }
            input.ReadMessage(subBuilder);
            LiveStatus = subBuilder;
            break;
          }
          case 138: {
            global::VNerve.Bilibili.Live.RoomInfoChangedMessage subBuilder = new global::VNerve.Bilibili.Live.RoomInfoChangedMessage();
            if (payloadCase_ == PayloadOneofCase.InfoChange) {
              subBuilder.MergeFrom(InfoChange);
            }
            input.ReadMessage(subBuilder);
            InfoChange = subBuilder;
            break;
          }
          case 146: {
            global::VNerve.Bilibili.Live.RoomLockedMessage subBuilder = new global::VNerve.Bilibili.Live.RoomLockedMessage();
            if (payloadCase_ == PayloadOneofCase.RoomLocked) {
              subBuilder.MergeFrom(RoomLocked);
            }
            input.ReadMessage(subBuilder);
            RoomLocked = subBuilder;
            break;
          }
          case 154: {
            global::VNerve.Bilibili.Live.RoomWarningMessage subBuilder = new global::VNerve.Bilibili.Live.RoomWarningMessage();
            if (payloadCase_ == PayloadOneofCase.RoomWarning) {
              subBuilder.MergeFrom(RoomWarning);
            }
            input.ReadMessage(subBuilder);
            RoomWarning = subBuilder;
            break;
          }
          case 162: {
            global::VNerve.Bilibili.Live.RoomLimitedMessage subBuilder = new global::VNerve.Bilibili.Live.RoomLimitedMessage();
            if (payloadCase_ == PayloadOneofCase.RoomLimited) {
              subBuilder.MergeFrom(RoomLimited);
            }
            input.ReadMessage(subBuilder);
            RoomLimited = subBuilder;
            break;
          }
          case 170: {
            global::VNerve.Bilibili.Live.SuperChatDeleteMessage subBuilder = new global::VNerve.Bilibili.Live.SuperChatDeleteMessage();
            if (payloadCase_ == PayloadOneofCase.SuperchatDelete) {
              subBuilder.MergeFrom(SuperchatDelete);
            }
            input.ReadMessage(subBuilder);
            SuperchatDelete = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// 直播间人气值更新
  /// </summary>
  public sealed partial class PopularityChangedMessage : pb::IMessage<PopularityChangedMessage> {
    private static readonly pb::MessageParser<PopularityChangedMessage> _parser = new pb::MessageParser<PopularityChangedMessage>(() => new PopularityChangedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PopularityChangedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.Live.RoomMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PopularityChangedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PopularityChangedMessage(PopularityChangedMessage other) : this() {
      popularity_ = other.popularity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PopularityChangedMessage Clone() {
      return new PopularityChangedMessage(this);
    }

    /// <summary>Field number for the "popularity" field.</summary>
    public const int PopularityFieldNumber = 1;
    private uint popularity_;
    /// <summary>
    ///*
    ///新的人气值
    ///
    ///在未开播的时候人气值恒为 1。
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Popularity {
      get { return popularity_; }
      set {
        popularity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PopularityChangedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PopularityChangedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Popularity != other.Popularity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Popularity != 0) hash ^= Popularity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Popularity != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Popularity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Popularity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Popularity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PopularityChangedMessage other) {
      if (other == null) {
        return;
      }
      if (other.Popularity != 0) {
        Popularity = other.Popularity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Popularity = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  ///直播间上下播状态
  ///
  ///可能多次发送！下游应用需要自行进行状态锁操作
  /// </summary>
  public sealed partial class LiveStatusChangedMessage : pb::IMessage<LiveStatusChangedMessage> {
    private static readonly pb::MessageParser<LiveStatusChangedMessage> _parser = new pb::MessageParser<LiveStatusChangedMessage>(() => new LiveStatusChangedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LiveStatusChangedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.Live.RoomMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiveStatusChangedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiveStatusChangedMessage(LiveStatusChangedMessage other) : this() {
      status_ = other.status_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiveStatusChangedMessage Clone() {
      return new LiveStatusChangedMessage(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::VNerve.Bilibili.Live.LiveStatus status_ = global::VNerve.Bilibili.Live.LiveStatus.Preparing;
    /// <summary>
    /// 新的开播状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.Live.LiveStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    /// 被切断直播的时候的消息，仅在 status == CUT_OFF 时可用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LiveStatusChangedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LiveStatusChangedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::VNerve.Bilibili.Live.LiveStatus.Preparing) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != global::VNerve.Bilibili.Live.LiveStatus.Preparing) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != global::VNerve.Bilibili.Live.LiveStatus.Preparing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LiveStatusChangedMessage other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::VNerve.Bilibili.Live.LiveStatus.Preparing) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::VNerve.Bilibili.Live.LiveStatus) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  ///直播间信息变更
  ///
  ///下游应用需要根据 oneof changed 的状态确定何种信息被变更。
  /// </summary>
  public sealed partial class RoomInfoChangedMessage : pb::IMessage<RoomInfoChangedMessage> {
    private static readonly pb::MessageParser<RoomInfoChangedMessage> _parser = new pb::MessageParser<RoomInfoChangedMessage>(() => new RoomInfoChangedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomInfoChangedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.Live.RoomMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfoChangedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfoChangedMessage(RoomInfoChangedMessage other) : this() {
      switch (other.ChangedCase) {
        case ChangedOneofCase.BaseInfo:
          BaseInfo = other.BaseInfo.Clone();
          break;
        case ChangedOneofCase.BackgroundUrl:
          BackgroundUrl = other.BackgroundUrl;
          break;
        case ChangedOneofCase.SkinId:
          SkinId = other.SkinId;
          break;
        case ChangedOneofCase.Admin:
          Admin = other.Admin.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfoChangedMessage Clone() {
      return new RoomInfoChangedMessage(this);
    }

    /// <summary>Field number for the "base_info" field.</summary>
    public const int BaseInfoFieldNumber = 1;
    /// <summary>
    /// 直播间标题与分区
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.Live.RoomBaseInfo BaseInfo {
      get { return changedCase_ == ChangedOneofCase.BaseInfo ? (global::VNerve.Bilibili.Live.RoomBaseInfo) changed_ : null; }
      set {
        changed_ = value;
        changedCase_ = value == null ? ChangedOneofCase.None : ChangedOneofCase.BaseInfo;
      }
    }

    /// <summary>Field number for the "background_url" field.</summary>
    public const int BackgroundUrlFieldNumber = 2;
    /// <summary>
    /// 直播间背景图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackgroundUrl {
      get { return changedCase_ == ChangedOneofCase.BackgroundUrl ? (string) changed_ : ""; }
      set {
        changed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        changedCase_ = ChangedOneofCase.BackgroundUrl;
      }
    }

    /// <summary>Field number for the "skin_id" field.</summary>
    public const int SkinIdFieldNumber = 3;
    /// <summary>
    /// 直播间皮肤
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SkinId {
      get { return changedCase_ == ChangedOneofCase.SkinId ? (uint) changed_ : 0; }
      set {
        changed_ = value;
        changedCase_ = ChangedOneofCase.SkinId;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 4;
    /// <summary>
    /// 直播间房管列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.Live.RoomAdminInfo Admin {
      get { return changedCase_ == ChangedOneofCase.Admin ? (global::VNerve.Bilibili.Live.RoomAdminInfo) changed_ : null; }
      set {
        changed_ = value;
        changedCase_ = value == null ? ChangedOneofCase.None : ChangedOneofCase.Admin;
      }
    }

    private object changed_;
    /// <summary>Enum of possible cases for the "changed" oneof.</summary>
    public enum ChangedOneofCase {
      None = 0,
      BaseInfo = 1,
      BackgroundUrl = 2,
      SkinId = 3,
      Admin = 4,
    }
    private ChangedOneofCase changedCase_ = ChangedOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangedOneofCase ChangedCase {
      get { return changedCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChanged() {
      changedCase_ = ChangedOneofCase.None;
      changed_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomInfoChangedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomInfoChangedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BaseInfo, other.BaseInfo)) return false;
      if (BackgroundUrl != other.BackgroundUrl) return false;
      if (SkinId != other.SkinId) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      if (ChangedCase != other.ChangedCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (changedCase_ == ChangedOneofCase.BaseInfo) hash ^= BaseInfo.GetHashCode();
      if (changedCase_ == ChangedOneofCase.BackgroundUrl) hash ^= BackgroundUrl.GetHashCode();
      if (changedCase_ == ChangedOneofCase.SkinId) hash ^= SkinId.GetHashCode();
      if (changedCase_ == ChangedOneofCase.Admin) hash ^= Admin.GetHashCode();
      hash ^= (int) changedCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (changedCase_ == ChangedOneofCase.BaseInfo) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseInfo);
      }
      if (changedCase_ == ChangedOneofCase.BackgroundUrl) {
        output.WriteRawTag(18);
        output.WriteString(BackgroundUrl);
      }
      if (changedCase_ == ChangedOneofCase.SkinId) {
        output.WriteRawTag(24);
        output.WriteUInt32(SkinId);
      }
      if (changedCase_ == ChangedOneofCase.Admin) {
        output.WriteRawTag(34);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (changedCase_ == ChangedOneofCase.BaseInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseInfo);
      }
      if (changedCase_ == ChangedOneofCase.BackgroundUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackgroundUrl);
      }
      if (changedCase_ == ChangedOneofCase.SkinId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SkinId);
      }
      if (changedCase_ == ChangedOneofCase.Admin) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomInfoChangedMessage other) {
      if (other == null) {
        return;
      }
      switch (other.ChangedCase) {
        case ChangedOneofCase.BaseInfo:
          if (BaseInfo == null) {
            BaseInfo = new global::VNerve.Bilibili.Live.RoomBaseInfo();
          }
          BaseInfo.MergeFrom(other.BaseInfo);
          break;
        case ChangedOneofCase.BackgroundUrl:
          BackgroundUrl = other.BackgroundUrl;
          break;
        case ChangedOneofCase.SkinId:
          SkinId = other.SkinId;
          break;
        case ChangedOneofCase.Admin:
          if (Admin == null) {
            Admin = new global::VNerve.Bilibili.Live.RoomAdminInfo();
          }
          Admin.MergeFrom(other.Admin);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::VNerve.Bilibili.Live.RoomBaseInfo subBuilder = new global::VNerve.Bilibili.Live.RoomBaseInfo();
            if (changedCase_ == ChangedOneofCase.BaseInfo) {
              subBuilder.MergeFrom(BaseInfo);
            }
            input.ReadMessage(subBuilder);
            BaseInfo = subBuilder;
            break;
          }
          case 18: {
            BackgroundUrl = input.ReadString();
            break;
          }
          case 24: {
            SkinId = input.ReadUInt32();
            break;
          }
          case 34: {
            global::VNerve.Bilibili.Live.RoomAdminInfo subBuilder = new global::VNerve.Bilibili.Live.RoomAdminInfo();
            if (changedCase_ == ChangedOneofCase.Admin) {
              subBuilder.MergeFrom(Admin);
            }
            input.ReadMessage(subBuilder);
            Admin = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// 直播间基础信息，包含标题、分区等
  /// </summary>
  public sealed partial class RoomBaseInfo : pb::IMessage<RoomBaseInfo> {
    private static readonly pb::MessageParser<RoomBaseInfo> _parser = new pb::MessageParser<RoomBaseInfo>(() => new RoomBaseInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomBaseInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.Live.RoomMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomBaseInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomBaseInfo(RoomBaseInfo other) : this() {
      title_ = other.title_;
      areaId_ = other.areaId_;
      areaName_ = other.areaName_;
      parentAreaId_ = other.parentAreaId_;
      parentAreaName_ = other.parentAreaName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomBaseInfo Clone() {
      return new RoomBaseInfo(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    /// <summary>
    /// 直播间标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "area_id" field.</summary>
    public const int AreaIdFieldNumber = 2;
    private uint areaId_;
    /// <summary>
    /// 分区 ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AreaId {
      get { return areaId_; }
      set {
        areaId_ = value;
      }
    }

    /// <summary>Field number for the "area_name" field.</summary>
    public const int AreaNameFieldNumber = 3;
    private string areaName_ = "";
    /// <summary>
    /// 分区名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AreaName {
      get { return areaName_; }
      set {
        areaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent_area_id" field.</summary>
    public const int ParentAreaIdFieldNumber = 4;
    private uint parentAreaId_;
    /// <summary>
    /// 大分区 ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ParentAreaId {
      get { return parentAreaId_; }
      set {
        parentAreaId_ = value;
      }
    }

    /// <summary>Field number for the "parent_area_name" field.</summary>
    public const int ParentAreaNameFieldNumber = 5;
    private string parentAreaName_ = "";
    /// <summary>
    /// 大分区名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentAreaName {
      get { return parentAreaName_; }
      set {
        parentAreaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomBaseInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomBaseInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (AreaId != other.AreaId) return false;
      if (AreaName != other.AreaName) return false;
      if (ParentAreaId != other.ParentAreaId) return false;
      if (ParentAreaName != other.ParentAreaName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (AreaId != 0) hash ^= AreaId.GetHashCode();
      if (AreaName.Length != 0) hash ^= AreaName.GetHashCode();
      if (ParentAreaId != 0) hash ^= ParentAreaId.GetHashCode();
      if (ParentAreaName.Length != 0) hash ^= ParentAreaName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (AreaId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AreaId);
      }
      if (AreaName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AreaName);
      }
      if (ParentAreaId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ParentAreaId);
      }
      if (ParentAreaName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ParentAreaName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (AreaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AreaId);
      }
      if (AreaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AreaName);
      }
      if (ParentAreaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ParentAreaId);
      }
      if (ParentAreaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentAreaName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomBaseInfo other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.AreaId != 0) {
        AreaId = other.AreaId;
      }
      if (other.AreaName.Length != 0) {
        AreaName = other.AreaName;
      }
      if (other.ParentAreaId != 0) {
        ParentAreaId = other.ParentAreaId;
      }
      if (other.ParentAreaName.Length != 0) {
        ParentAreaName = other.ParentAreaName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 16: {
            AreaId = input.ReadUInt32();
            break;
          }
          case 26: {
            AreaName = input.ReadString();
            break;
          }
          case 32: {
            ParentAreaId = input.ReadUInt32();
            break;
          }
          case 42: {
            ParentAreaName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// 直播间房管列表信息
  /// </summary>
  public sealed partial class RoomAdminInfo : pb::IMessage<RoomAdminInfo> {
    private static readonly pb::MessageParser<RoomAdminInfo> _parser = new pb::MessageParser<RoomAdminInfo>(() => new RoomAdminInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomAdminInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.Live.RoomMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomAdminInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomAdminInfo(RoomAdminInfo other) : this() {
      uid_ = other.uid_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomAdminInfo Clone() {
      return new RoomAdminInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_uid_codec
        = pb::FieldCodec.ForUInt64(10);
    private readonly pbc::RepeatedField<ulong> uid_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// 所有房管的 UID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Uid {
      get { return uid_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomAdminInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomAdminInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!uid_.Equals(other.uid_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= uid_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      uid_.WriteTo(output, _repeated_uid_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += uid_.CalculateSize(_repeated_uid_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomAdminInfo other) {
      if (other == null) {
        return;
      }
      uid_.Add(other.uid_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            uid_.AddEntriesFrom(input, _repeated_uid_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// 直播间被锁定/封禁
  /// </summary>
  public sealed partial class RoomLockedMessage : pb::IMessage<RoomLockedMessage> {
    private static readonly pb::MessageParser<RoomLockedMessage> _parser = new pb::MessageParser<RoomLockedMessage>(() => new RoomLockedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomLockedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.Live.RoomMessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomLockedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomLockedMessage(RoomLockedMessage other) : this() {
      lockedUntil_ = other.lockedUntil_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomLockedMessage Clone() {
      return new RoomLockedMessage(this);
    }

    /// <summary>Field number for the "locked_until" field.</summary>
    public const int LockedUntilFieldNumber = 1;
    private ulong lockedUntil_;
    /// <summary>
    /// 封禁持续到的时间，为 UNIX 时间戳(UTC+8)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LockedUntil {
      get { return lockedUntil_; }
      set {
        lockedUntil_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomLockedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomLockedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LockedUntil != other.LockedUntil) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LockedUntil != 0UL) hash ^= LockedUntil.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LockedUntil != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(LockedUntil);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LockedUntil != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LockedUntil);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomLockedMessage other) {
      if (other == null) {
        return;
      }
      if (other.LockedUntil != 0UL) {
        LockedUntil = other.LockedUntil;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LockedUntil = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// 直播间被警告
  /// </summary>
  public sealed partial class RoomWarningMessage : pb::IMessage<RoomWarningMessage> {
    private static readonly pb::MessageParser<RoomWarningMessage> _parser = new pb::MessageParser<RoomWarningMessage>(() => new RoomWarningMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomWarningMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.Live.RoomMessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomWarningMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomWarningMessage(RoomWarningMessage other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomWarningMessage Clone() {
      return new RoomWarningMessage(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    /// <summary>
    /// 警告的信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomWarningMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomWarningMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomWarningMessage other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  ///直播间受限，发生情况尚不明
  ///
  ///可能在播放带版权的内容时出现，亦可能进入某些特殊分区（放映厅等）时候出现。
  /// </summary>
  public sealed partial class RoomLimitedMessage : pb::IMessage<RoomLimitedMessage> {
    private static readonly pb::MessageParser<RoomLimitedMessage> _parser = new pb::MessageParser<RoomLimitedMessage>(() => new RoomLimitedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomLimitedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.Live.RoomMessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomLimitedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomLimitedMessage(RoomLimitedMessage other) : this() {
      type_ = other.type_;
      delayRange_ = other.delayRange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomLimitedMessage Clone() {
      return new RoomLimitedMessage(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    /// <summary>
    /// 源 JSON 中的 type 字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "delay_range" field.</summary>
    public const int DelayRangeFieldNumber = 2;
    private uint delayRange_;
    /// <summary>
    /// 源 JSON 中的 delay_range 字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DelayRange {
      get { return delayRange_; }
      set {
        delayRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomLimitedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomLimitedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (DelayRange != other.DelayRange) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (DelayRange != 0) hash ^= DelayRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (DelayRange != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(DelayRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (DelayRange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DelayRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomLimitedMessage other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.DelayRange != 0) {
        DelayRange = other.DelayRange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            DelayRange = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// 删除 Super Chat 消息，通常由房管发出
  /// </summary>
  public sealed partial class SuperChatDeleteMessage : pb::IMessage<SuperChatDeleteMessage> {
    private static readonly pb::MessageParser<SuperChatDeleteMessage> _parser = new pb::MessageParser<SuperChatDeleteMessage>(() => new SuperChatDeleteMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuperChatDeleteMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.Live.RoomMessageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuperChatDeleteMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuperChatDeleteMessage(SuperChatDeleteMessage other) : this() {
      id_ = other.id_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuperChatDeleteMessage Clone() {
      return new SuperChatDeleteMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_id_codec
        = pb::FieldCodec.ForUInt64(10);
    private readonly pbc::RepeatedField<ulong> id_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// 删除的所有 Super Chat 的 ID，对应 SuperChatMessage 中的 id 字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Id {
      get { return id_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuperChatDeleteMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuperChatDeleteMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!id_.Equals(other.id_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= id_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      id_.WriteTo(output, _repeated_id_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += id_.CalculateSize(_repeated_id_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuperChatDeleteMessage other) {
      if (other == null) {
        return;
      }
      id_.Add(other.id_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            id_.AddEntriesFrom(input, _repeated_id_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
