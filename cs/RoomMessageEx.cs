// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: vNerve/bilibili/livex/room_message_ex.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace VNerve.Bilibili.Livex {

  /// <summary>Holder for reflection information generated from vNerve/bilibili/livex/room_message_ex.proto</summary>
  public static partial class RoomMessageExReflection {

    #region Descriptor
    /// <summary>File descriptor for vNerve/bilibili/livex/room_message_ex.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RoomMessageExReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cit2TmVydmUvYmlsaWJpbGkvbGl2ZXgvcm9vbV9tZXNzYWdlX2V4LnByb3Rv",
            "EhV2TmVydmUuYmlsaWJpbGkubGl2ZXgaJ3ZOZXJ2ZS9iaWxpYmlsaS9saXZl",
            "L3Jvb21fbWVzc2FnZS5wcm90byJ8Cg1Sb29tTWVzc2FnZUV4Eg8KB3Jvb21f",
            "aWQYASABKA0STwoRZXh0cmFfaW5mb19jaGFuZ2UYAiABKAsyMi52TmVydmUu",
            "YmlsaWJpbGkubGl2ZXguUm9vbUV4dHJhSW5mb0NoYW5nZWRNZXNzYWdlSABC",
            "CQoHcGF5bG9hZCKZAQobUm9vbUV4dHJhSW5mb0NoYW5nZWRNZXNzYWdlEjUK",
            "C2xpdmVfc3RhdHVzGAEgASgOMiAudk5lcnZlLmJpbGliaWxpLmxpdmUuTGl2",
            "ZVN0YXR1cxINCgV0aXRsZRgDIAEoCRIMCgRhcmVhGAQgASgJEg0KBWNvdmVy",
            "GAUgASgJEhcKD3N0YXJ0X2xpdmVfdGltZRgQIAEoBGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::VNerve.Bilibili.Live.RoomMessageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.Livex.RoomMessageEx), global::VNerve.Bilibili.Livex.RoomMessageEx.Parser, new[]{ "RoomId", "ExtraInfoChange" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.Livex.RoomExtraInfoChangedMessage), global::VNerve.Bilibili.Livex.RoomExtraInfoChangedMessage.Parser, new[]{ "LiveStatus", "Title", "Area", "Cover", "StartLiveTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RoomMessageEx : pb::IMessage<RoomMessageEx> {
    private static readonly pb::MessageParser<RoomMessageEx> _parser = new pb::MessageParser<RoomMessageEx>(() => new RoomMessageEx());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomMessageEx> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.Livex.RoomMessageExReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomMessageEx() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomMessageEx(RoomMessageEx other) : this() {
      roomId_ = other.roomId_;
      switch (other.PayloadCase) {
        case PayloadOneofCase.ExtraInfoChange:
          ExtraInfoChange = other.ExtraInfoChange.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomMessageEx Clone() {
      return new RoomMessageEx(this);
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private uint roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "extra_info_change" field.</summary>
    public const int ExtraInfoChangeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.Livex.RoomExtraInfoChangedMessage ExtraInfoChange {
      get { return payloadCase_ == PayloadOneofCase.ExtraInfoChange ? (global::VNerve.Bilibili.Livex.RoomExtraInfoChangedMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ExtraInfoChange;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      ExtraInfoChange = 2,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomMessageEx);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomMessageEx other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (!object.Equals(ExtraInfoChange, other.ExtraInfoChange)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.ExtraInfoChange) hash ^= ExtraInfoChange.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RoomId);
      }
      if (payloadCase_ == PayloadOneofCase.ExtraInfoChange) {
        output.WriteRawTag(18);
        output.WriteMessage(ExtraInfoChange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      if (payloadCase_ == PayloadOneofCase.ExtraInfoChange) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtraInfoChange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomMessageEx other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.ExtraInfoChange:
          if (ExtraInfoChange == null) {
            ExtraInfoChange = new global::VNerve.Bilibili.Livex.RoomExtraInfoChangedMessage();
          }
          ExtraInfoChange.MergeFrom(other.ExtraInfoChange);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadUInt32();
            break;
          }
          case 18: {
            global::VNerve.Bilibili.Livex.RoomExtraInfoChangedMessage subBuilder = new global::VNerve.Bilibili.Livex.RoomExtraInfoChangedMessage();
            if (payloadCase_ == PayloadOneofCase.ExtraInfoChange) {
              subBuilder.MergeFrom(ExtraInfoChange);
            }
            input.ReadMessage(subBuilder);
            ExtraInfoChange = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomExtraInfoChangedMessage : pb::IMessage<RoomExtraInfoChangedMessage> {
    private static readonly pb::MessageParser<RoomExtraInfoChangedMessage> _parser = new pb::MessageParser<RoomExtraInfoChangedMessage>(() => new RoomExtraInfoChangedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomExtraInfoChangedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.Livex.RoomMessageExReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomExtraInfoChangedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomExtraInfoChangedMessage(RoomExtraInfoChangedMessage other) : this() {
      liveStatus_ = other.liveStatus_;
      title_ = other.title_;
      area_ = other.area_;
      cover_ = other.cover_;
      startLiveTime_ = other.startLiveTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomExtraInfoChangedMessage Clone() {
      return new RoomExtraInfoChangedMessage(this);
    }

    /// <summary>Field number for the "live_status" field.</summary>
    public const int LiveStatusFieldNumber = 1;
    private global::VNerve.Bilibili.Live.LiveStatus liveStatus_ = global::VNerve.Bilibili.Live.LiveStatus.Preparing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.Live.LiveStatus LiveStatus {
      get { return liveStatus_; }
      set {
        liveStatus_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 4;
    private string area_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Area {
      get { return area_; }
      set {
        area_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cover" field.</summary>
    public const int CoverFieldNumber = 5;
    private string cover_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cover {
      get { return cover_; }
      set {
        cover_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_live_time" field.</summary>
    public const int StartLiveTimeFieldNumber = 16;
    private ulong startLiveTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StartLiveTime {
      get { return startLiveTime_; }
      set {
        startLiveTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomExtraInfoChangedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomExtraInfoChangedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LiveStatus != other.LiveStatus) return false;
      if (Title != other.Title) return false;
      if (Area != other.Area) return false;
      if (Cover != other.Cover) return false;
      if (StartLiveTime != other.StartLiveTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LiveStatus != global::VNerve.Bilibili.Live.LiveStatus.Preparing) hash ^= LiveStatus.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Area.Length != 0) hash ^= Area.GetHashCode();
      if (Cover.Length != 0) hash ^= Cover.GetHashCode();
      if (StartLiveTime != 0UL) hash ^= StartLiveTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LiveStatus != global::VNerve.Bilibili.Live.LiveStatus.Preparing) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LiveStatus);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (Area.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Area);
      }
      if (Cover.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Cover);
      }
      if (StartLiveTime != 0UL) {
        output.WriteRawTag(128, 1);
        output.WriteUInt64(StartLiveTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LiveStatus != global::VNerve.Bilibili.Live.LiveStatus.Preparing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LiveStatus);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Area.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Area);
      }
      if (Cover.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cover);
      }
      if (StartLiveTime != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(StartLiveTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomExtraInfoChangedMessage other) {
      if (other == null) {
        return;
      }
      if (other.LiveStatus != global::VNerve.Bilibili.Live.LiveStatus.Preparing) {
        LiveStatus = other.LiveStatus;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Area.Length != 0) {
        Area = other.Area;
      }
      if (other.Cover.Length != 0) {
        Cover = other.Cover;
      }
      if (other.StartLiveTime != 0UL) {
        StartLiveTime = other.StartLiveTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LiveStatus = (global::VNerve.Bilibili.Live.LiveStatus) input.ReadEnum();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            Area = input.ReadString();
            break;
          }
          case 42: {
            Cover = input.ReadString();
            break;
          }
          case 128: {
            StartLiveTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
