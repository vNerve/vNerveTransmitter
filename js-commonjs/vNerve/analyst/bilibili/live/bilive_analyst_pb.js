// source: vNerve/analyst/bilibili/live/bilive_analyst.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.vNerve.analyst.bilibili.live.BiLiveStatistic', null, global);
goog.exportSymbol('proto.vNerve.analyst.bilibili.live.BiLiveStatisticType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vNerve.analyst.bilibili.live.BiLiveStatistic.repeatedFields_, null);
};
goog.inherits(proto.vNerve.analyst.bilibili.live.BiLiveStatistic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.analyst.bilibili.live.BiLiveStatistic.displayName = 'proto.vNerve.analyst.bilibili.live.BiLiveStatistic';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.repeatedFields_ = [16,17,20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.analyst.bilibili.live.BiLiveStatistic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    start: jspb.Message.getFieldWithDefault(msg, 2, 0),
    end: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxPopularity: jspb.Message.getFieldWithDefault(msg, 4, 0),
    lastPopularity: jspb.Message.getFieldWithDefault(msg, 5, 0),
    goldCoin: jspb.Message.getFieldWithDefault(msg, 6, 0),
    silverCoin: jspb.Message.getFieldWithDefault(msg, 7, 0),
    title: jspb.Message.getFieldWithDefault(msg, 8, ""),
    area: jspb.Message.getFieldWithDefault(msg, 9, ""),
    cover: jspb.Message.getFieldWithDefault(msg, 10, ""),
    type: jspb.Message.getFieldWithDefault(msg, 11, 0),
    realDanmakuUsersList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
    lotteryDanmakuUsersList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
    goldUsersAndCoinMap: (f = msg.getGoldUsersAndCoinMap()) ? f.toObject(includeInstance, undefined) : [],
    silverUsersAndCoinMap: (f = msg.getSilverUsersAndCoinMap()) ? f.toObject(includeInstance, undefined) : [],
    participatedUsersList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.analyst.bilibili.live.BiLiveStatistic;
  return proto.vNerve.analyst.bilibili.live.BiLiveStatistic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRoomId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStart(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEnd(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxPopularity(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastPopularity(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGoldCoin(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSilverCoin(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setArea(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCover(value);
      break;
    case 11:
      var value = /** @type {!proto.vNerve.analyst.bilibili.live.BiLiveStatisticType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 16:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setRealDanmakuUsersList(value);
      break;
    case 17:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setLotteryDanmakuUsersList(value);
      break;
    case 18:
      var value = msg.getGoldUsersAndCoinMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readUint32, null, 0, 0);
         });
      break;
    case 19:
      var value = msg.getSilverUsersAndCoinMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readUint32, null, 0, 0);
         });
      break;
    case 20:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setParticipatedUsersList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.analyst.bilibili.live.BiLiveStatistic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getMaxPopularity();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getLastPopularity();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getGoldCoin();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getSilverCoin();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getArea();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCover();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getRealDanmakuUsersList();
  if (f.length > 0) {
    writer.writePackedUint64(
      16,
      f
    );
  }
  f = message.getLotteryDanmakuUsersList();
  if (f.length > 0) {
    writer.writePackedUint64(
      17,
      f
    );
  }
  f = message.getGoldUsersAndCoinMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(18, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeUint32);
  }
  f = message.getSilverUsersAndCoinMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(19, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeUint32);
  }
  f = message.getParticipatedUsersList();
  if (f.length > 0) {
    writer.writePackedUint64(
      20,
      f
    );
  }
};


/**
 * optional uint32 room_id = 1;
 * @return {number}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getRoomId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 start = 2;
 * @return {number}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 end = 3;
 * @return {number}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 max_popularity = 4;
 * @return {number}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getMaxPopularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setMaxPopularity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 last_popularity = 5;
 * @return {number}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getLastPopularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setLastPopularity = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 gold_coin = 6;
 * @return {number}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getGoldCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setGoldCoin = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 silver_coin = 7;
 * @return {number}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getSilverCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setSilverCoin = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string title = 8;
 * @return {string}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string area = 9;
 * @return {string}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getArea = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setArea = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string cover = 10;
 * @return {string}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getCover = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setCover = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional BiLiveStatisticType type = 11;
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatisticType}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getType = function() {
  return /** @type {!proto.vNerve.analyst.bilibili.live.BiLiveStatisticType} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.vNerve.analyst.bilibili.live.BiLiveStatisticType} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * repeated uint64 real_danmaku_users = 16;
 * @return {!Array<number>}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getRealDanmakuUsersList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setRealDanmakuUsersList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.addRealDanmakuUsers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.clearRealDanmakuUsersList = function() {
  return this.setRealDanmakuUsersList([]);
};


/**
 * repeated uint64 lottery_danmaku_users = 17;
 * @return {!Array<number>}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getLotteryDanmakuUsersList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setLotteryDanmakuUsersList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.addLotteryDanmakuUsers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.clearLotteryDanmakuUsersList = function() {
  return this.setLotteryDanmakuUsersList([]);
};


/**
 * map<uint64, uint32> gold_users_and_coin = 18;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getGoldUsersAndCoinMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 18, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.clearGoldUsersAndCoinMap = function() {
  this.getGoldUsersAndCoinMap().clear();
  return this;};


/**
 * map<uint64, uint32> silver_users_and_coin = 19;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getSilverUsersAndCoinMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 19, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.clearSilverUsersAndCoinMap = function() {
  this.getSilverUsersAndCoinMap().clear();
  return this;};


/**
 * repeated uint64 participated_users = 20;
 * @return {!Array<number>}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.getParticipatedUsersList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 20));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.setParticipatedUsersList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.addParticipatedUsers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vNerve.analyst.bilibili.live.BiLiveStatistic} returns this
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatistic.prototype.clearParticipatedUsersList = function() {
  return this.setParticipatedUsersList([]);
};


/**
 * @enum {number}
 */
proto.vNerve.analyst.bilibili.live.BiLiveStatisticType = {
  SLICE: 0,
  SESSION: 1
};

goog.object.extend(exports, proto.vNerve.analyst.bilibili.live);
