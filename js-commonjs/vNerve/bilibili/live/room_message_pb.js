// source: vNerve/bilibili/live/room_message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var vNerve_bilibili_live_user_message_pb = require('../../../vNerve/bilibili/live/user_message_pb.js');
goog.object.extend(proto, vNerve_bilibili_live_user_message_pb);
goog.exportSymbol('proto.vNerve.bilibili.live.LiveStatus', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.LiveStatusChangedMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.PopularityChangedMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.RoomAdminInfo', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.RoomBaseInfo', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.RoomInfoChangedMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.RoomInfoChangedMessage.ChangedCase', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.RoomLimitedMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.RoomLockedMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.RoomMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.RoomMessage.PayloadCase', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.RoomWarningMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.SuperChatDeleteMessage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.RoomMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.vNerve.bilibili.live.RoomMessage.oneofGroups_);
};
goog.inherits(proto.vNerve.bilibili.live.RoomMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.RoomMessage.displayName = 'proto.vNerve.bilibili.live.RoomMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.PopularityChangedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.PopularityChangedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.PopularityChangedMessage.displayName = 'proto.vNerve.bilibili.live.PopularityChangedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.LiveStatusChangedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.LiveStatusChangedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.LiveStatusChangedMessage.displayName = 'proto.vNerve.bilibili.live.LiveStatusChangedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.vNerve.bilibili.live.RoomInfoChangedMessage.oneofGroups_);
};
goog.inherits(proto.vNerve.bilibili.live.RoomInfoChangedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.RoomInfoChangedMessage.displayName = 'proto.vNerve.bilibili.live.RoomInfoChangedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.RoomBaseInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.RoomBaseInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.RoomBaseInfo.displayName = 'proto.vNerve.bilibili.live.RoomBaseInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.RoomAdminInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vNerve.bilibili.live.RoomAdminInfo.repeatedFields_, null);
};
goog.inherits(proto.vNerve.bilibili.live.RoomAdminInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.RoomAdminInfo.displayName = 'proto.vNerve.bilibili.live.RoomAdminInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.RoomLockedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.RoomLockedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.RoomLockedMessage.displayName = 'proto.vNerve.bilibili.live.RoomLockedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.RoomWarningMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.RoomWarningMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.RoomWarningMessage.displayName = 'proto.vNerve.bilibili.live.RoomWarningMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.RoomLimitedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.RoomLimitedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.RoomLimitedMessage.displayName = 'proto.vNerve.bilibili.live.RoomLimitedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.SuperChatDeleteMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vNerve.bilibili.live.SuperChatDeleteMessage.repeatedFields_, null);
};
goog.inherits(proto.vNerve.bilibili.live.SuperChatDeleteMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.SuperChatDeleteMessage.displayName = 'proto.vNerve.bilibili.live.SuperChatDeleteMessage';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.vNerve.bilibili.live.RoomMessage.oneofGroups_ = [[2,3,16,17,18,19,20,21]];

/**
 * @enum {number}
 */
proto.vNerve.bilibili.live.RoomMessage.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  USER_MESSAGE: 2,
  POPULARITY_CHANGE: 3,
  LIVE_STATUS: 16,
  INFO_CHANGE: 17,
  ROOM_LOCKED: 18,
  ROOM_WARNING: 19,
  ROOM_LIMITED: 20,
  SUPERCHAT_DELETE: 21
};

/**
 * @return {proto.vNerve.bilibili.live.RoomMessage.PayloadCase}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.getPayloadCase = function() {
  return /** @type {proto.vNerve.bilibili.live.RoomMessage.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.vNerve.bilibili.live.RoomMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.RoomMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.RoomMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userMessage: (f = msg.getUserMessage()) && vNerve_bilibili_live_user_message_pb.UserMessage.toObject(includeInstance, f),
    popularityChange: (f = msg.getPopularityChange()) && proto.vNerve.bilibili.live.PopularityChangedMessage.toObject(includeInstance, f),
    liveStatus: (f = msg.getLiveStatus()) && proto.vNerve.bilibili.live.LiveStatusChangedMessage.toObject(includeInstance, f),
    infoChange: (f = msg.getInfoChange()) && proto.vNerve.bilibili.live.RoomInfoChangedMessage.toObject(includeInstance, f),
    roomLocked: (f = msg.getRoomLocked()) && proto.vNerve.bilibili.live.RoomLockedMessage.toObject(includeInstance, f),
    roomWarning: (f = msg.getRoomWarning()) && proto.vNerve.bilibili.live.RoomWarningMessage.toObject(includeInstance, f),
    roomLimited: (f = msg.getRoomLimited()) && proto.vNerve.bilibili.live.RoomLimitedMessage.toObject(includeInstance, f),
    superchatDelete: (f = msg.getSuperchatDelete()) && proto.vNerve.bilibili.live.SuperChatDeleteMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.RoomMessage}
 */
proto.vNerve.bilibili.live.RoomMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.RoomMessage;
  return proto.vNerve.bilibili.live.RoomMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.RoomMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.RoomMessage}
 */
proto.vNerve.bilibili.live.RoomMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRoomId(value);
      break;
    case 2:
      var value = new vNerve_bilibili_live_user_message_pb.UserMessage;
      reader.readMessage(value,vNerve_bilibili_live_user_message_pb.UserMessage.deserializeBinaryFromReader);
      msg.setUserMessage(value);
      break;
    case 3:
      var value = new proto.vNerve.bilibili.live.PopularityChangedMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.PopularityChangedMessage.deserializeBinaryFromReader);
      msg.setPopularityChange(value);
      break;
    case 16:
      var value = new proto.vNerve.bilibili.live.LiveStatusChangedMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.LiveStatusChangedMessage.deserializeBinaryFromReader);
      msg.setLiveStatus(value);
      break;
    case 17:
      var value = new proto.vNerve.bilibili.live.RoomInfoChangedMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.RoomInfoChangedMessage.deserializeBinaryFromReader);
      msg.setInfoChange(value);
      break;
    case 18:
      var value = new proto.vNerve.bilibili.live.RoomLockedMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.RoomLockedMessage.deserializeBinaryFromReader);
      msg.setRoomLocked(value);
      break;
    case 19:
      var value = new proto.vNerve.bilibili.live.RoomWarningMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.RoomWarningMessage.deserializeBinaryFromReader);
      msg.setRoomWarning(value);
      break;
    case 20:
      var value = new proto.vNerve.bilibili.live.RoomLimitedMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.RoomLimitedMessage.deserializeBinaryFromReader);
      msg.setRoomLimited(value);
      break;
    case 21:
      var value = new proto.vNerve.bilibili.live.SuperChatDeleteMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.SuperChatDeleteMessage.deserializeBinaryFromReader);
      msg.setSuperchatDelete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.RoomMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.RoomMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getUserMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      vNerve_bilibili_live_user_message_pb.UserMessage.serializeBinaryToWriter
    );
  }
  f = message.getPopularityChange();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.vNerve.bilibili.live.PopularityChangedMessage.serializeBinaryToWriter
    );
  }
  f = message.getLiveStatus();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.vNerve.bilibili.live.LiveStatusChangedMessage.serializeBinaryToWriter
    );
  }
  f = message.getInfoChange();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.vNerve.bilibili.live.RoomInfoChangedMessage.serializeBinaryToWriter
    );
  }
  f = message.getRoomLocked();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.vNerve.bilibili.live.RoomLockedMessage.serializeBinaryToWriter
    );
  }
  f = message.getRoomWarning();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.vNerve.bilibili.live.RoomWarningMessage.serializeBinaryToWriter
    );
  }
  f = message.getRoomLimited();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.vNerve.bilibili.live.RoomLimitedMessage.serializeBinaryToWriter
    );
  }
  f = message.getSuperchatDelete();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.vNerve.bilibili.live.SuperChatDeleteMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 room_id = 1;
 * @return {number}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.getRoomId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional UserMessage user_message = 2;
 * @return {?proto.vNerve.bilibili.live.UserMessage}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.getUserMessage = function() {
  return /** @type{?proto.vNerve.bilibili.live.UserMessage} */ (
    jspb.Message.getWrapperField(this, vNerve_bilibili_live_user_message_pb.UserMessage, 2));
};


/**
 * @param {?proto.vNerve.bilibili.live.UserMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
*/
proto.vNerve.bilibili.live.RoomMessage.prototype.setUserMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.vNerve.bilibili.live.RoomMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.clearUserMessage = function() {
  return this.setUserMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.hasUserMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PopularityChangedMessage popularity_change = 3;
 * @return {?proto.vNerve.bilibili.live.PopularityChangedMessage}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.getPopularityChange = function() {
  return /** @type{?proto.vNerve.bilibili.live.PopularityChangedMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.PopularityChangedMessage, 3));
};


/**
 * @param {?proto.vNerve.bilibili.live.PopularityChangedMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
*/
proto.vNerve.bilibili.live.RoomMessage.prototype.setPopularityChange = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.vNerve.bilibili.live.RoomMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.clearPopularityChange = function() {
  return this.setPopularityChange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.hasPopularityChange = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional LiveStatusChangedMessage live_status = 16;
 * @return {?proto.vNerve.bilibili.live.LiveStatusChangedMessage}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.getLiveStatus = function() {
  return /** @type{?proto.vNerve.bilibili.live.LiveStatusChangedMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.LiveStatusChangedMessage, 16));
};


/**
 * @param {?proto.vNerve.bilibili.live.LiveStatusChangedMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
*/
proto.vNerve.bilibili.live.RoomMessage.prototype.setLiveStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.vNerve.bilibili.live.RoomMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.clearLiveStatus = function() {
  return this.setLiveStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.hasLiveStatus = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional RoomInfoChangedMessage info_change = 17;
 * @return {?proto.vNerve.bilibili.live.RoomInfoChangedMessage}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.getInfoChange = function() {
  return /** @type{?proto.vNerve.bilibili.live.RoomInfoChangedMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.RoomInfoChangedMessage, 17));
};


/**
 * @param {?proto.vNerve.bilibili.live.RoomInfoChangedMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
*/
proto.vNerve.bilibili.live.RoomMessage.prototype.setInfoChange = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.vNerve.bilibili.live.RoomMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.clearInfoChange = function() {
  return this.setInfoChange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.hasInfoChange = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional RoomLockedMessage room_locked = 18;
 * @return {?proto.vNerve.bilibili.live.RoomLockedMessage}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.getRoomLocked = function() {
  return /** @type{?proto.vNerve.bilibili.live.RoomLockedMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.RoomLockedMessage, 18));
};


/**
 * @param {?proto.vNerve.bilibili.live.RoomLockedMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
*/
proto.vNerve.bilibili.live.RoomMessage.prototype.setRoomLocked = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.vNerve.bilibili.live.RoomMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.clearRoomLocked = function() {
  return this.setRoomLocked(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.hasRoomLocked = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional RoomWarningMessage room_warning = 19;
 * @return {?proto.vNerve.bilibili.live.RoomWarningMessage}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.getRoomWarning = function() {
  return /** @type{?proto.vNerve.bilibili.live.RoomWarningMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.RoomWarningMessage, 19));
};


/**
 * @param {?proto.vNerve.bilibili.live.RoomWarningMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
*/
proto.vNerve.bilibili.live.RoomMessage.prototype.setRoomWarning = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.vNerve.bilibili.live.RoomMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.clearRoomWarning = function() {
  return this.setRoomWarning(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.hasRoomWarning = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional RoomLimitedMessage room_limited = 20;
 * @return {?proto.vNerve.bilibili.live.RoomLimitedMessage}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.getRoomLimited = function() {
  return /** @type{?proto.vNerve.bilibili.live.RoomLimitedMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.RoomLimitedMessage, 20));
};


/**
 * @param {?proto.vNerve.bilibili.live.RoomLimitedMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
*/
proto.vNerve.bilibili.live.RoomMessage.prototype.setRoomLimited = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.vNerve.bilibili.live.RoomMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.clearRoomLimited = function() {
  return this.setRoomLimited(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.hasRoomLimited = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional SuperChatDeleteMessage superchat_delete = 21;
 * @return {?proto.vNerve.bilibili.live.SuperChatDeleteMessage}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.getSuperchatDelete = function() {
  return /** @type{?proto.vNerve.bilibili.live.SuperChatDeleteMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.SuperChatDeleteMessage, 21));
};


/**
 * @param {?proto.vNerve.bilibili.live.SuperChatDeleteMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
*/
proto.vNerve.bilibili.live.RoomMessage.prototype.setSuperchatDelete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 21, proto.vNerve.bilibili.live.RoomMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.RoomMessage} returns this
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.clearSuperchatDelete = function() {
  return this.setSuperchatDelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.RoomMessage.prototype.hasSuperchatDelete = function() {
  return jspb.Message.getField(this, 21) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.PopularityChangedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.PopularityChangedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.PopularityChangedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.PopularityChangedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    popularity: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.PopularityChangedMessage}
 */
proto.vNerve.bilibili.live.PopularityChangedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.PopularityChangedMessage;
  return proto.vNerve.bilibili.live.PopularityChangedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.PopularityChangedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.PopularityChangedMessage}
 */
proto.vNerve.bilibili.live.PopularityChangedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPopularity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.PopularityChangedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.PopularityChangedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.PopularityChangedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.PopularityChangedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPopularity();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 popularity = 1;
 * @return {number}
 */
proto.vNerve.bilibili.live.PopularityChangedMessage.prototype.getPopularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.PopularityChangedMessage} returns this
 */
proto.vNerve.bilibili.live.PopularityChangedMessage.prototype.setPopularity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.LiveStatusChangedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.LiveStatusChangedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.LiveStatusChangedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.LiveStatusChangedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.LiveStatusChangedMessage}
 */
proto.vNerve.bilibili.live.LiveStatusChangedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.LiveStatusChangedMessage;
  return proto.vNerve.bilibili.live.LiveStatusChangedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.LiveStatusChangedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.LiveStatusChangedMessage}
 */
proto.vNerve.bilibili.live.LiveStatusChangedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.vNerve.bilibili.live.LiveStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.LiveStatusChangedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.LiveStatusChangedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.LiveStatusChangedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.LiveStatusChangedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional LiveStatus status = 1;
 * @return {!proto.vNerve.bilibili.live.LiveStatus}
 */
proto.vNerve.bilibili.live.LiveStatusChangedMessage.prototype.getStatus = function() {
  return /** @type {!proto.vNerve.bilibili.live.LiveStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.vNerve.bilibili.live.LiveStatus} value
 * @return {!proto.vNerve.bilibili.live.LiveStatusChangedMessage} returns this
 */
proto.vNerve.bilibili.live.LiveStatusChangedMessage.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.vNerve.bilibili.live.LiveStatusChangedMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.LiveStatusChangedMessage} returns this
 */
proto.vNerve.bilibili.live.LiveStatusChangedMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.ChangedCase = {
  CHANGED_NOT_SET: 0,
  BASE_INFO: 1,
  BACKGROUND_URL: 2,
  SKIN_ID: 3,
  ADMIN: 4
};

/**
 * @return {proto.vNerve.bilibili.live.RoomInfoChangedMessage.ChangedCase}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.getChangedCase = function() {
  return /** @type {proto.vNerve.bilibili.live.RoomInfoChangedMessage.ChangedCase} */(jspb.Message.computeOneofCase(this, proto.vNerve.bilibili.live.RoomInfoChangedMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.RoomInfoChangedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.RoomInfoChangedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseInfo: (f = msg.getBaseInfo()) && proto.vNerve.bilibili.live.RoomBaseInfo.toObject(includeInstance, f),
    backgroundUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    skinId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    admin: (f = msg.getAdmin()) && proto.vNerve.bilibili.live.RoomAdminInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.RoomInfoChangedMessage}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.RoomInfoChangedMessage;
  return proto.vNerve.bilibili.live.RoomInfoChangedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.RoomInfoChangedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.RoomInfoChangedMessage}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.vNerve.bilibili.live.RoomBaseInfo;
      reader.readMessage(value,proto.vNerve.bilibili.live.RoomBaseInfo.deserializeBinaryFromReader);
      msg.setBaseInfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackgroundUrl(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSkinId(value);
      break;
    case 4:
      var value = new proto.vNerve.bilibili.live.RoomAdminInfo;
      reader.readMessage(value,proto.vNerve.bilibili.live.RoomAdminInfo.deserializeBinaryFromReader);
      msg.setAdmin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.RoomInfoChangedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.RoomInfoChangedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBaseInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.vNerve.bilibili.live.RoomBaseInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAdmin();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.vNerve.bilibili.live.RoomAdminInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional RoomBaseInfo base_info = 1;
 * @return {?proto.vNerve.bilibili.live.RoomBaseInfo}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.getBaseInfo = function() {
  return /** @type{?proto.vNerve.bilibili.live.RoomBaseInfo} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.RoomBaseInfo, 1));
};


/**
 * @param {?proto.vNerve.bilibili.live.RoomBaseInfo|undefined} value
 * @return {!proto.vNerve.bilibili.live.RoomInfoChangedMessage} returns this
*/
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.setBaseInfo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.vNerve.bilibili.live.RoomInfoChangedMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.RoomInfoChangedMessage} returns this
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.clearBaseInfo = function() {
  return this.setBaseInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.hasBaseInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string background_url = 2;
 * @return {string}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.getBackgroundUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.RoomInfoChangedMessage} returns this
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.setBackgroundUrl = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.vNerve.bilibili.live.RoomInfoChangedMessage.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.vNerve.bilibili.live.RoomInfoChangedMessage} returns this
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.clearBackgroundUrl = function() {
  return jspb.Message.setOneofField(this, 2, proto.vNerve.bilibili.live.RoomInfoChangedMessage.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.hasBackgroundUrl = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 skin_id = 3;
 * @return {number}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.getSkinId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.RoomInfoChangedMessage} returns this
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.setSkinId = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.vNerve.bilibili.live.RoomInfoChangedMessage.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.vNerve.bilibili.live.RoomInfoChangedMessage} returns this
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.clearSkinId = function() {
  return jspb.Message.setOneofField(this, 3, proto.vNerve.bilibili.live.RoomInfoChangedMessage.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.hasSkinId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RoomAdminInfo admin = 4;
 * @return {?proto.vNerve.bilibili.live.RoomAdminInfo}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.getAdmin = function() {
  return /** @type{?proto.vNerve.bilibili.live.RoomAdminInfo} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.RoomAdminInfo, 4));
};


/**
 * @param {?proto.vNerve.bilibili.live.RoomAdminInfo|undefined} value
 * @return {!proto.vNerve.bilibili.live.RoomInfoChangedMessage} returns this
*/
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.setAdmin = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.vNerve.bilibili.live.RoomInfoChangedMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.RoomInfoChangedMessage} returns this
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.clearAdmin = function() {
  return this.setAdmin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.RoomInfoChangedMessage.prototype.hasAdmin = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.RoomBaseInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.RoomBaseInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.RoomBaseInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomBaseInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    areaId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    areaName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    parentAreaId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    parentAreaName: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.RoomBaseInfo}
 */
proto.vNerve.bilibili.live.RoomBaseInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.RoomBaseInfo;
  return proto.vNerve.bilibili.live.RoomBaseInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.RoomBaseInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.RoomBaseInfo}
 */
proto.vNerve.bilibili.live.RoomBaseInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAreaId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAreaName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParentAreaId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentAreaName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.RoomBaseInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.RoomBaseInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.RoomBaseInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomBaseInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAreaId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getAreaName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParentAreaId();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getParentAreaName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.vNerve.bilibili.live.RoomBaseInfo.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.RoomBaseInfo} returns this
 */
proto.vNerve.bilibili.live.RoomBaseInfo.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 area_id = 2;
 * @return {number}
 */
proto.vNerve.bilibili.live.RoomBaseInfo.prototype.getAreaId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.RoomBaseInfo} returns this
 */
proto.vNerve.bilibili.live.RoomBaseInfo.prototype.setAreaId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string area_name = 3;
 * @return {string}
 */
proto.vNerve.bilibili.live.RoomBaseInfo.prototype.getAreaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.RoomBaseInfo} returns this
 */
proto.vNerve.bilibili.live.RoomBaseInfo.prototype.setAreaName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 parent_area_id = 4;
 * @return {number}
 */
proto.vNerve.bilibili.live.RoomBaseInfo.prototype.getParentAreaId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.RoomBaseInfo} returns this
 */
proto.vNerve.bilibili.live.RoomBaseInfo.prototype.setParentAreaId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string parent_area_name = 5;
 * @return {string}
 */
proto.vNerve.bilibili.live.RoomBaseInfo.prototype.getParentAreaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.RoomBaseInfo} returns this
 */
proto.vNerve.bilibili.live.RoomBaseInfo.prototype.setParentAreaName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vNerve.bilibili.live.RoomAdminInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.RoomAdminInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.RoomAdminInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.RoomAdminInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomAdminInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    uidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.RoomAdminInfo}
 */
proto.vNerve.bilibili.live.RoomAdminInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.RoomAdminInfo;
  return proto.vNerve.bilibili.live.RoomAdminInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.RoomAdminInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.RoomAdminInfo}
 */
proto.vNerve.bilibili.live.RoomAdminInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setUidList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.RoomAdminInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.RoomAdminInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.RoomAdminInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomAdminInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUidList();
  if (f.length > 0) {
    writer.writePackedUint64(
      1,
      f
    );
  }
};


/**
 * repeated uint64 uid = 1;
 * @return {!Array<number>}
 */
proto.vNerve.bilibili.live.RoomAdminInfo.prototype.getUidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vNerve.bilibili.live.RoomAdminInfo} returns this
 */
proto.vNerve.bilibili.live.RoomAdminInfo.prototype.setUidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vNerve.bilibili.live.RoomAdminInfo} returns this
 */
proto.vNerve.bilibili.live.RoomAdminInfo.prototype.addUid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vNerve.bilibili.live.RoomAdminInfo} returns this
 */
proto.vNerve.bilibili.live.RoomAdminInfo.prototype.clearUidList = function() {
  return this.setUidList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.RoomLockedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.RoomLockedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.RoomLockedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomLockedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    lockedUntil: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.RoomLockedMessage}
 */
proto.vNerve.bilibili.live.RoomLockedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.RoomLockedMessage;
  return proto.vNerve.bilibili.live.RoomLockedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.RoomLockedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.RoomLockedMessage}
 */
proto.vNerve.bilibili.live.RoomLockedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLockedUntil(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.RoomLockedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.RoomLockedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.RoomLockedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomLockedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLockedUntil();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 locked_until = 1;
 * @return {number}
 */
proto.vNerve.bilibili.live.RoomLockedMessage.prototype.getLockedUntil = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.RoomLockedMessage} returns this
 */
proto.vNerve.bilibili.live.RoomLockedMessage.prototype.setLockedUntil = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.RoomWarningMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.RoomWarningMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.RoomWarningMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomWarningMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.RoomWarningMessage}
 */
proto.vNerve.bilibili.live.RoomWarningMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.RoomWarningMessage;
  return proto.vNerve.bilibili.live.RoomWarningMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.RoomWarningMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.RoomWarningMessage}
 */
proto.vNerve.bilibili.live.RoomWarningMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.RoomWarningMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.RoomWarningMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.RoomWarningMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomWarningMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.vNerve.bilibili.live.RoomWarningMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.RoomWarningMessage} returns this
 */
proto.vNerve.bilibili.live.RoomWarningMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.RoomLimitedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.RoomLimitedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.RoomLimitedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomLimitedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    delayRange: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.RoomLimitedMessage}
 */
proto.vNerve.bilibili.live.RoomLimitedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.RoomLimitedMessage;
  return proto.vNerve.bilibili.live.RoomLimitedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.RoomLimitedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.RoomLimitedMessage}
 */
proto.vNerve.bilibili.live.RoomLimitedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelayRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.RoomLimitedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.RoomLimitedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.RoomLimitedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.RoomLimitedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDelayRange();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.vNerve.bilibili.live.RoomLimitedMessage.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.RoomLimitedMessage} returns this
 */
proto.vNerve.bilibili.live.RoomLimitedMessage.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 delay_range = 2;
 * @return {number}
 */
proto.vNerve.bilibili.live.RoomLimitedMessage.prototype.getDelayRange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.RoomLimitedMessage} returns this
 */
proto.vNerve.bilibili.live.RoomLimitedMessage.prototype.setDelayRange = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vNerve.bilibili.live.SuperChatDeleteMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.SuperChatDeleteMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.SuperChatDeleteMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.SuperChatDeleteMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.SuperChatDeleteMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    idList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.SuperChatDeleteMessage}
 */
proto.vNerve.bilibili.live.SuperChatDeleteMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.SuperChatDeleteMessage;
  return proto.vNerve.bilibili.live.SuperChatDeleteMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.SuperChatDeleteMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.SuperChatDeleteMessage}
 */
proto.vNerve.bilibili.live.SuperChatDeleteMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setIdList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.SuperChatDeleteMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.SuperChatDeleteMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.SuperChatDeleteMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.SuperChatDeleteMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writePackedUint64(
      1,
      f
    );
  }
};


/**
 * repeated uint64 id = 1;
 * @return {!Array<number>}
 */
proto.vNerve.bilibili.live.SuperChatDeleteMessage.prototype.getIdList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vNerve.bilibili.live.SuperChatDeleteMessage} returns this
 */
proto.vNerve.bilibili.live.SuperChatDeleteMessage.prototype.setIdList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vNerve.bilibili.live.SuperChatDeleteMessage} returns this
 */
proto.vNerve.bilibili.live.SuperChatDeleteMessage.prototype.addId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vNerve.bilibili.live.SuperChatDeleteMessage} returns this
 */
proto.vNerve.bilibili.live.SuperChatDeleteMessage.prototype.clearIdList = function() {
  return this.setIdList([]);
};


/**
 * @enum {number}
 */
proto.vNerve.bilibili.live.LiveStatus = {
  PREPARING: 0,
  LIVE: 1,
  ROUND: 2,
  CUT_OFF: 3
};

goog.object.extend(exports, proto.vNerve.bilibili.live);
