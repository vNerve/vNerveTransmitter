// source: vNerve/bilibili/live/user_message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.vNerve.bilibili.live.DanmakuMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.GiftMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.GuardBuyType', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.GuardDurationLevel', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.GuardLevel', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.LiveVipLevel', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.LotteryDanmakuType', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.MedalInfo', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.NewGuardMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.SuperChatMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.UserBlockedMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.UserInfo', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.UserInfo.AdminOptionalCase', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.UserInfo.MainVipOptionalCase', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.UserMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.UserMessage.PayloadCase', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.WelcomeGuardMessage', null, global);
goog.exportSymbol('proto.vNerve.bilibili.live.WelcomeVIPMessage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.UserMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.vNerve.bilibili.live.UserMessage.oneofGroups_);
};
goog.inherits(proto.vNerve.bilibili.live.UserMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.UserMessage.displayName = 'proto.vNerve.bilibili.live.UserMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.UserInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.vNerve.bilibili.live.UserInfo.oneofGroups_);
};
goog.inherits(proto.vNerve.bilibili.live.UserInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.UserInfo.displayName = 'proto.vNerve.bilibili.live.UserInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.MedalInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.MedalInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.MedalInfo.displayName = 'proto.vNerve.bilibili.live.MedalInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.DanmakuMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.DanmakuMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.DanmakuMessage.displayName = 'proto.vNerve.bilibili.live.DanmakuMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.GiftMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.GiftMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.GiftMessage.displayName = 'proto.vNerve.bilibili.live.GiftMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.SuperChatMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.SuperChatMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.SuperChatMessage.displayName = 'proto.vNerve.bilibili.live.SuperChatMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.WelcomeVIPMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.WelcomeVIPMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.WelcomeVIPMessage.displayName = 'proto.vNerve.bilibili.live.WelcomeVIPMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.WelcomeGuardMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.WelcomeGuardMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.WelcomeGuardMessage.displayName = 'proto.vNerve.bilibili.live.WelcomeGuardMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.NewGuardMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.NewGuardMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.NewGuardMessage.displayName = 'proto.vNerve.bilibili.live.NewGuardMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vNerve.bilibili.live.UserBlockedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vNerve.bilibili.live.UserBlockedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vNerve.bilibili.live.UserBlockedMessage.displayName = 'proto.vNerve.bilibili.live.UserBlockedMessage';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.vNerve.bilibili.live.UserMessage.oneofGroups_ = [[2,3,4,5,6,7,16]];

/**
 * @enum {number}
 */
proto.vNerve.bilibili.live.UserMessage.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  DANMAKU: 2,
  GIFT: 3,
  SUPER_CHAT: 4,
  NEW_GUARD: 5,
  WELCOME_VIP: 6,
  WELCOME_GUARD: 7,
  USER_BLOCKED: 16
};

/**
 * @return {proto.vNerve.bilibili.live.UserMessage.PayloadCase}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.getPayloadCase = function() {
  return /** @type {proto.vNerve.bilibili.live.UserMessage.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.vNerve.bilibili.live.UserMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.UserMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.UserMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.UserMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.vNerve.bilibili.live.UserInfo.toObject(includeInstance, f),
    danmaku: (f = msg.getDanmaku()) && proto.vNerve.bilibili.live.DanmakuMessage.toObject(includeInstance, f),
    gift: (f = msg.getGift()) && proto.vNerve.bilibili.live.GiftMessage.toObject(includeInstance, f),
    superChat: (f = msg.getSuperChat()) && proto.vNerve.bilibili.live.SuperChatMessage.toObject(includeInstance, f),
    newGuard: (f = msg.getNewGuard()) && proto.vNerve.bilibili.live.NewGuardMessage.toObject(includeInstance, f),
    welcomeVip: (f = msg.getWelcomeVip()) && proto.vNerve.bilibili.live.WelcomeVIPMessage.toObject(includeInstance, f),
    welcomeGuard: (f = msg.getWelcomeGuard()) && proto.vNerve.bilibili.live.WelcomeGuardMessage.toObject(includeInstance, f),
    userBlocked: (f = msg.getUserBlocked()) && proto.vNerve.bilibili.live.UserBlockedMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.UserMessage}
 */
proto.vNerve.bilibili.live.UserMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.UserMessage;
  return proto.vNerve.bilibili.live.UserMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.UserMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.UserMessage}
 */
proto.vNerve.bilibili.live.UserMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.vNerve.bilibili.live.UserInfo;
      reader.readMessage(value,proto.vNerve.bilibili.live.UserInfo.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new proto.vNerve.bilibili.live.DanmakuMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.DanmakuMessage.deserializeBinaryFromReader);
      msg.setDanmaku(value);
      break;
    case 3:
      var value = new proto.vNerve.bilibili.live.GiftMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.GiftMessage.deserializeBinaryFromReader);
      msg.setGift(value);
      break;
    case 4:
      var value = new proto.vNerve.bilibili.live.SuperChatMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.SuperChatMessage.deserializeBinaryFromReader);
      msg.setSuperChat(value);
      break;
    case 5:
      var value = new proto.vNerve.bilibili.live.NewGuardMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.NewGuardMessage.deserializeBinaryFromReader);
      msg.setNewGuard(value);
      break;
    case 6:
      var value = new proto.vNerve.bilibili.live.WelcomeVIPMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.WelcomeVIPMessage.deserializeBinaryFromReader);
      msg.setWelcomeVip(value);
      break;
    case 7:
      var value = new proto.vNerve.bilibili.live.WelcomeGuardMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.WelcomeGuardMessage.deserializeBinaryFromReader);
      msg.setWelcomeGuard(value);
      break;
    case 16:
      var value = new proto.vNerve.bilibili.live.UserBlockedMessage;
      reader.readMessage(value,proto.vNerve.bilibili.live.UserBlockedMessage.deserializeBinaryFromReader);
      msg.setUserBlocked(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.UserMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.UserMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.UserMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.vNerve.bilibili.live.UserInfo.serializeBinaryToWriter
    );
  }
  f = message.getDanmaku();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.vNerve.bilibili.live.DanmakuMessage.serializeBinaryToWriter
    );
  }
  f = message.getGift();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.vNerve.bilibili.live.GiftMessage.serializeBinaryToWriter
    );
  }
  f = message.getSuperChat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.vNerve.bilibili.live.SuperChatMessage.serializeBinaryToWriter
    );
  }
  f = message.getNewGuard();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.vNerve.bilibili.live.NewGuardMessage.serializeBinaryToWriter
    );
  }
  f = message.getWelcomeVip();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.vNerve.bilibili.live.WelcomeVIPMessage.serializeBinaryToWriter
    );
  }
  f = message.getWelcomeGuard();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.vNerve.bilibili.live.WelcomeGuardMessage.serializeBinaryToWriter
    );
  }
  f = message.getUserBlocked();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.vNerve.bilibili.live.UserBlockedMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserInfo user = 1;
 * @return {?proto.vNerve.bilibili.live.UserInfo}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.getUser = function() {
  return /** @type{?proto.vNerve.bilibili.live.UserInfo} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.UserInfo, 1));
};


/**
 * @param {?proto.vNerve.bilibili.live.UserInfo|undefined} value
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
*/
proto.vNerve.bilibili.live.UserMessage.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
 */
proto.vNerve.bilibili.live.UserMessage.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DanmakuMessage danmaku = 2;
 * @return {?proto.vNerve.bilibili.live.DanmakuMessage}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.getDanmaku = function() {
  return /** @type{?proto.vNerve.bilibili.live.DanmakuMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.DanmakuMessage, 2));
};


/**
 * @param {?proto.vNerve.bilibili.live.DanmakuMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
*/
proto.vNerve.bilibili.live.UserMessage.prototype.setDanmaku = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.vNerve.bilibili.live.UserMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
 */
proto.vNerve.bilibili.live.UserMessage.prototype.clearDanmaku = function() {
  return this.setDanmaku(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.hasDanmaku = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GiftMessage gift = 3;
 * @return {?proto.vNerve.bilibili.live.GiftMessage}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.getGift = function() {
  return /** @type{?proto.vNerve.bilibili.live.GiftMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.GiftMessage, 3));
};


/**
 * @param {?proto.vNerve.bilibili.live.GiftMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
*/
proto.vNerve.bilibili.live.UserMessage.prototype.setGift = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.vNerve.bilibili.live.UserMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
 */
proto.vNerve.bilibili.live.UserMessage.prototype.clearGift = function() {
  return this.setGift(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.hasGift = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SuperChatMessage super_chat = 4;
 * @return {?proto.vNerve.bilibili.live.SuperChatMessage}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.getSuperChat = function() {
  return /** @type{?proto.vNerve.bilibili.live.SuperChatMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.SuperChatMessage, 4));
};


/**
 * @param {?proto.vNerve.bilibili.live.SuperChatMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
*/
proto.vNerve.bilibili.live.UserMessage.prototype.setSuperChat = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.vNerve.bilibili.live.UserMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
 */
proto.vNerve.bilibili.live.UserMessage.prototype.clearSuperChat = function() {
  return this.setSuperChat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.hasSuperChat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional NewGuardMessage new_guard = 5;
 * @return {?proto.vNerve.bilibili.live.NewGuardMessage}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.getNewGuard = function() {
  return /** @type{?proto.vNerve.bilibili.live.NewGuardMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.NewGuardMessage, 5));
};


/**
 * @param {?proto.vNerve.bilibili.live.NewGuardMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
*/
proto.vNerve.bilibili.live.UserMessage.prototype.setNewGuard = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.vNerve.bilibili.live.UserMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
 */
proto.vNerve.bilibili.live.UserMessage.prototype.clearNewGuard = function() {
  return this.setNewGuard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.hasNewGuard = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional WelcomeVIPMessage welcome_vip = 6;
 * @return {?proto.vNerve.bilibili.live.WelcomeVIPMessage}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.getWelcomeVip = function() {
  return /** @type{?proto.vNerve.bilibili.live.WelcomeVIPMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.WelcomeVIPMessage, 6));
};


/**
 * @param {?proto.vNerve.bilibili.live.WelcomeVIPMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
*/
proto.vNerve.bilibili.live.UserMessage.prototype.setWelcomeVip = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.vNerve.bilibili.live.UserMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
 */
proto.vNerve.bilibili.live.UserMessage.prototype.clearWelcomeVip = function() {
  return this.setWelcomeVip(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.hasWelcomeVip = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional WelcomeGuardMessage welcome_guard = 7;
 * @return {?proto.vNerve.bilibili.live.WelcomeGuardMessage}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.getWelcomeGuard = function() {
  return /** @type{?proto.vNerve.bilibili.live.WelcomeGuardMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.WelcomeGuardMessage, 7));
};


/**
 * @param {?proto.vNerve.bilibili.live.WelcomeGuardMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
*/
proto.vNerve.bilibili.live.UserMessage.prototype.setWelcomeGuard = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.vNerve.bilibili.live.UserMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
 */
proto.vNerve.bilibili.live.UserMessage.prototype.clearWelcomeGuard = function() {
  return this.setWelcomeGuard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.hasWelcomeGuard = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional UserBlockedMessage user_blocked = 16;
 * @return {?proto.vNerve.bilibili.live.UserBlockedMessage}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.getUserBlocked = function() {
  return /** @type{?proto.vNerve.bilibili.live.UserBlockedMessage} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.UserBlockedMessage, 16));
};


/**
 * @param {?proto.vNerve.bilibili.live.UserBlockedMessage|undefined} value
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
*/
proto.vNerve.bilibili.live.UserMessage.prototype.setUserBlocked = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.vNerve.bilibili.live.UserMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.UserMessage} returns this
 */
proto.vNerve.bilibili.live.UserMessage.prototype.clearUserBlocked = function() {
  return this.setUserBlocked(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserMessage.prototype.hasUserBlocked = function() {
  return jspb.Message.getField(this, 16) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.vNerve.bilibili.live.UserInfo.oneofGroups_ = [[6],[7]];

/**
 * @enum {number}
 */
proto.vNerve.bilibili.live.UserInfo.AdminOptionalCase = {
  ADMIN_OPTIONAL_NOT_SET: 0,
  ADMIN: 6
};

/**
 * @return {proto.vNerve.bilibili.live.UserInfo.AdminOptionalCase}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getAdminOptionalCase = function() {
  return /** @type {proto.vNerve.bilibili.live.UserInfo.AdminOptionalCase} */(jspb.Message.computeOneofCase(this, proto.vNerve.bilibili.live.UserInfo.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.vNerve.bilibili.live.UserInfo.MainVipOptionalCase = {
  MAIN_VIP_OPTIONAL_NOT_SET: 0,
  MAIN_VIP: 7
};

/**
 * @return {proto.vNerve.bilibili.live.UserInfo.MainVipOptionalCase}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getMainVipOptionalCase = function() {
  return /** @type {proto.vNerve.bilibili.live.UserInfo.MainVipOptionalCase} */(jspb.Message.computeOneofCase(this, proto.vNerve.bilibili.live.UserInfo.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.UserInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.UserInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.UserInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    avatarUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userLevel: jspb.Message.getFieldWithDefault(msg, 4, 0),
    userLevelBorderColor: jspb.Message.getFieldWithDefault(msg, 5, 0),
    admin: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    mainVip: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    liveVipLevel: jspb.Message.getFieldWithDefault(msg, 8, 0),
    title: jspb.Message.getFieldWithDefault(msg, 9, ""),
    medal: (f = msg.getMedal()) && proto.vNerve.bilibili.live.MedalInfo.toObject(includeInstance, f),
    guardLevel: jspb.Message.getFieldWithDefault(msg, 11, 0),
    phoneVerified: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    regularUser: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.UserInfo}
 */
proto.vNerve.bilibili.live.UserInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.UserInfo;
  return proto.vNerve.bilibili.live.UserInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.UserInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.UserInfo}
 */
proto.vNerve.bilibili.live.UserInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserLevel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setUserLevelBorderColor(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdmin(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMainVip(value);
      break;
    case 8:
      var value = /** @type {!proto.vNerve.bilibili.live.LiveVipLevel} */ (reader.readEnum());
      msg.setLiveVipLevel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 10:
      var value = new proto.vNerve.bilibili.live.MedalInfo;
      reader.readMessage(value,proto.vNerve.bilibili.live.MedalInfo.deserializeBinaryFromReader);
      msg.setMedal(value);
      break;
    case 11:
      var value = /** @type {!proto.vNerve.bilibili.live.GuardLevel} */ (reader.readEnum());
      msg.setGuardLevel(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPhoneVerified(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRegularUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.UserInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.UserInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.UserInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAvatarUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserLevel();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getUserLevelBorderColor();
  if (f !== 0) {
    writer.writeFixed32(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getLiveVipLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMedal();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.vNerve.bilibili.live.MedalInfo.serializeBinaryToWriter
    );
  }
  f = message.getGuardLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getPhoneVerified();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getRegularUser();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional uint64 uid = 1;
 * @return {number}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.setUid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string avatar_url = 3;
 * @return {string}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.setAvatarUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 user_level = 4;
 * @return {number}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getUserLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.setUserLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional fixed32 user_level_border_color = 5;
 * @return {number}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getUserLevelBorderColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.setUserLevelBorderColor = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool admin = 6;
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.setAdmin = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.vNerve.bilibili.live.UserInfo.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.clearAdmin = function() {
  return jspb.Message.setOneofField(this, 6, proto.vNerve.bilibili.live.UserInfo.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.hasAdmin = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool main_vip = 7;
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getMainVip = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.setMainVip = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.vNerve.bilibili.live.UserInfo.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.clearMainVip = function() {
  return jspb.Message.setOneofField(this, 7, proto.vNerve.bilibili.live.UserInfo.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.hasMainVip = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional LiveVipLevel live_vip_level = 8;
 * @return {!proto.vNerve.bilibili.live.LiveVipLevel}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getLiveVipLevel = function() {
  return /** @type {!proto.vNerve.bilibili.live.LiveVipLevel} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.vNerve.bilibili.live.LiveVipLevel} value
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.setLiveVipLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string title = 9;
 * @return {string}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional MedalInfo medal = 10;
 * @return {?proto.vNerve.bilibili.live.MedalInfo}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getMedal = function() {
  return /** @type{?proto.vNerve.bilibili.live.MedalInfo} */ (
    jspb.Message.getWrapperField(this, proto.vNerve.bilibili.live.MedalInfo, 10));
};


/**
 * @param {?proto.vNerve.bilibili.live.MedalInfo|undefined} value
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
*/
proto.vNerve.bilibili.live.UserInfo.prototype.setMedal = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.clearMedal = function() {
  return this.setMedal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.hasMedal = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional GuardLevel guard_level = 11;
 * @return {!proto.vNerve.bilibili.live.GuardLevel}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getGuardLevel = function() {
  return /** @type {!proto.vNerve.bilibili.live.GuardLevel} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.vNerve.bilibili.live.GuardLevel} value
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.setGuardLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional bool phone_verified = 12;
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getPhoneVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.setPhoneVerified = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool regular_user = 13;
 * @return {boolean}
 */
proto.vNerve.bilibili.live.UserInfo.prototype.getRegularUser = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vNerve.bilibili.live.UserInfo} returns this
 */
proto.vNerve.bilibili.live.UserInfo.prototype.setRegularUser = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.MedalInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.MedalInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.MedalInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    medalName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    medalLevel: jspb.Message.getFieldWithDefault(msg, 2, 0),
    medalColor: jspb.Message.getFieldWithDefault(msg, 3, 0),
    streamerUid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    streamerName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    streamerRoomid: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.MedalInfo}
 */
proto.vNerve.bilibili.live.MedalInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.MedalInfo;
  return proto.vNerve.bilibili.live.MedalInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.MedalInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.MedalInfo}
 */
proto.vNerve.bilibili.live.MedalInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMedalName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMedalLevel(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setMedalColor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStreamerUid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreamerName(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStreamerRoomid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.MedalInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.MedalInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.MedalInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMedalName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMedalLevel();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMedalColor();
  if (f !== 0) {
    writer.writeFixed32(
      3,
      f
    );
  }
  f = message.getStreamerUid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getStreamerName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStreamerRoomid();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional string medal_name = 1;
 * @return {string}
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.getMedalName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.MedalInfo} returns this
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.setMedalName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 medal_level = 2;
 * @return {number}
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.getMedalLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.MedalInfo} returns this
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.setMedalLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed32 medal_color = 3;
 * @return {number}
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.getMedalColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.MedalInfo} returns this
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.setMedalColor = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 streamer_uid = 4;
 * @return {number}
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.getStreamerUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.MedalInfo} returns this
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.setStreamerUid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string streamer_name = 5;
 * @return {string}
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.getStreamerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.MedalInfo} returns this
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.setStreamerName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 streamer_roomid = 6;
 * @return {number}
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.getStreamerRoomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.MedalInfo} returns this
 */
proto.vNerve.bilibili.live.MedalInfo.prototype.setStreamerRoomid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.DanmakuMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.DanmakuMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.DanmakuMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.DanmakuMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lotteryType: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.DanmakuMessage}
 */
proto.vNerve.bilibili.live.DanmakuMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.DanmakuMessage;
  return proto.vNerve.bilibili.live.DanmakuMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.DanmakuMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.DanmakuMessage}
 */
proto.vNerve.bilibili.live.DanmakuMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {!proto.vNerve.bilibili.live.LotteryDanmakuType} */ (reader.readEnum());
      msg.setLotteryType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.DanmakuMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.DanmakuMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.DanmakuMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.DanmakuMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLotteryType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.vNerve.bilibili.live.DanmakuMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.DanmakuMessage} returns this
 */
proto.vNerve.bilibili.live.DanmakuMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LotteryDanmakuType lottery_type = 2;
 * @return {!proto.vNerve.bilibili.live.LotteryDanmakuType}
 */
proto.vNerve.bilibili.live.DanmakuMessage.prototype.getLotteryType = function() {
  return /** @type {!proto.vNerve.bilibili.live.LotteryDanmakuType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.vNerve.bilibili.live.LotteryDanmakuType} value
 * @return {!proto.vNerve.bilibili.live.DanmakuMessage} returns this
 */
proto.vNerve.bilibili.live.DanmakuMessage.prototype.setLotteryType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.GiftMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.GiftMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.GiftMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    isGold: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    totalCoin: jspb.Message.getFieldWithDefault(msg, 2, 0),
    giftId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    giftName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    singlePriceCoinRaw: jspb.Message.getFieldWithDefault(msg, 5, 0),
    count: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.GiftMessage}
 */
proto.vNerve.bilibili.live.GiftMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.GiftMessage;
  return proto.vNerve.bilibili.live.GiftMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.GiftMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.GiftMessage}
 */
proto.vNerve.bilibili.live.GiftMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsGold(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCoin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGiftId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGiftName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSinglePriceCoinRaw(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.GiftMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.GiftMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.GiftMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsGold();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getTotalCoin();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getGiftId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getGiftName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSinglePriceCoinRaw();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional bool is_gold = 1;
 * @return {boolean}
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.getIsGold = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vNerve.bilibili.live.GiftMessage} returns this
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.setIsGold = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint32 total_coin = 2;
 * @return {number}
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.getTotalCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.GiftMessage} returns this
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.setTotalCoin = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 gift_id = 3;
 * @return {number}
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.getGiftId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.GiftMessage} returns this
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.setGiftId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string gift_name = 4;
 * @return {string}
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.getGiftName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.GiftMessage} returns this
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.setGiftName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 single_price_coin_raw = 5;
 * @return {number}
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.getSinglePriceCoinRaw = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.GiftMessage} returns this
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.setSinglePriceCoinRaw = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 count = 6;
 * @return {number}
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.GiftMessage} returns this
 */
proto.vNerve.bilibili.live.GiftMessage.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.SuperChatMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.SuperChatMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.SuperChatMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, 0),
    token: jspb.Message.getFieldWithDefault(msg, 4, ""),
    priceCny: jspb.Message.getFieldWithDefault(msg, 5, 0),
    priceCoin: jspb.Message.getFieldWithDefault(msg, 6, 0),
    lastingTimeSec: jspb.Message.getFieldWithDefault(msg, 7, 0),
    startTime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.SuperChatMessage}
 */
proto.vNerve.bilibili.live.SuperChatMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.SuperChatMessage;
  return proto.vNerve.bilibili.live.SuperChatMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.SuperChatMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.SuperChatMessage}
 */
proto.vNerve.bilibili.live.SuperChatMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPriceCny(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPriceCoin(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastingTimeSec(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartTime(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.SuperChatMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.SuperChatMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.SuperChatMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPriceCny();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getPriceCoin();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getLastingTimeSec();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.SuperChatMessage} returns this
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 id = 3;
 * @return {number}
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.SuperChatMessage} returns this
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string token = 4;
 * @return {string}
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.vNerve.bilibili.live.SuperChatMessage} returns this
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 price_cny = 5;
 * @return {number}
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.getPriceCny = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.SuperChatMessage} returns this
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.setPriceCny = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 price_coin = 6;
 * @return {number}
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.getPriceCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.SuperChatMessage} returns this
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.setPriceCoin = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 lasting_time_sec = 7;
 * @return {number}
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.getLastingTimeSec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.SuperChatMessage} returns this
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.setLastingTimeSec = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 start_time = 8;
 * @return {number}
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.SuperChatMessage} returns this
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 end_time = 9;
 * @return {number}
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.SuperChatMessage} returns this
 */
proto.vNerve.bilibili.live.SuperChatMessage.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.WelcomeVIPMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.WelcomeVIPMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.WelcomeVIPMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.WelcomeVIPMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    level: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.WelcomeVIPMessage}
 */
proto.vNerve.bilibili.live.WelcomeVIPMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.WelcomeVIPMessage;
  return proto.vNerve.bilibili.live.WelcomeVIPMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.WelcomeVIPMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.WelcomeVIPMessage}
 */
proto.vNerve.bilibili.live.WelcomeVIPMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.vNerve.bilibili.live.LiveVipLevel} */ (reader.readEnum());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.WelcomeVIPMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.WelcomeVIPMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.WelcomeVIPMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.WelcomeVIPMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional LiveVipLevel level = 1;
 * @return {!proto.vNerve.bilibili.live.LiveVipLevel}
 */
proto.vNerve.bilibili.live.WelcomeVIPMessage.prototype.getLevel = function() {
  return /** @type {!proto.vNerve.bilibili.live.LiveVipLevel} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.vNerve.bilibili.live.LiveVipLevel} value
 * @return {!proto.vNerve.bilibili.live.WelcomeVIPMessage} returns this
 */
proto.vNerve.bilibili.live.WelcomeVIPMessage.prototype.setLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.WelcomeGuardMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.WelcomeGuardMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.WelcomeGuardMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.WelcomeGuardMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    level: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.WelcomeGuardMessage}
 */
proto.vNerve.bilibili.live.WelcomeGuardMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.WelcomeGuardMessage;
  return proto.vNerve.bilibili.live.WelcomeGuardMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.WelcomeGuardMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.WelcomeGuardMessage}
 */
proto.vNerve.bilibili.live.WelcomeGuardMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.vNerve.bilibili.live.GuardLevel} */ (reader.readEnum());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.WelcomeGuardMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.WelcomeGuardMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.WelcomeGuardMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.WelcomeGuardMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional GuardLevel level = 1;
 * @return {!proto.vNerve.bilibili.live.GuardLevel}
 */
proto.vNerve.bilibili.live.WelcomeGuardMessage.prototype.getLevel = function() {
  return /** @type {!proto.vNerve.bilibili.live.GuardLevel} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.vNerve.bilibili.live.GuardLevel} value
 * @return {!proto.vNerve.bilibili.live.WelcomeGuardMessage} returns this
 */
proto.vNerve.bilibili.live.WelcomeGuardMessage.prototype.setLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.NewGuardMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.NewGuardMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.NewGuardMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.NewGuardMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    level: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalCoin: jspb.Message.getFieldWithDefault(msg, 2, 0),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0),
    durationLevel: jspb.Message.getFieldWithDefault(msg, 4, 0),
    buyType: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.NewGuardMessage}
 */
proto.vNerve.bilibili.live.NewGuardMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.NewGuardMessage;
  return proto.vNerve.bilibili.live.NewGuardMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.NewGuardMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.NewGuardMessage}
 */
proto.vNerve.bilibili.live.NewGuardMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.vNerve.bilibili.live.GuardLevel} */ (reader.readEnum());
      msg.setLevel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCoin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 4:
      var value = /** @type {!proto.vNerve.bilibili.live.GuardDurationLevel} */ (reader.readEnum());
      msg.setDurationLevel(value);
      break;
    case 5:
      var value = /** @type {!proto.vNerve.bilibili.live.GuardBuyType} */ (reader.readEnum());
      msg.setBuyType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.NewGuardMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.NewGuardMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.NewGuardMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.NewGuardMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTotalCoin();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getDurationLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getBuyType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional GuardLevel level = 1;
 * @return {!proto.vNerve.bilibili.live.GuardLevel}
 */
proto.vNerve.bilibili.live.NewGuardMessage.prototype.getLevel = function() {
  return /** @type {!proto.vNerve.bilibili.live.GuardLevel} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.vNerve.bilibili.live.GuardLevel} value
 * @return {!proto.vNerve.bilibili.live.NewGuardMessage} returns this
 */
proto.vNerve.bilibili.live.NewGuardMessage.prototype.setLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 total_coin = 2;
 * @return {number}
 */
proto.vNerve.bilibili.live.NewGuardMessage.prototype.getTotalCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.NewGuardMessage} returns this
 */
proto.vNerve.bilibili.live.NewGuardMessage.prototype.setTotalCoin = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 count = 3;
 * @return {number}
 */
proto.vNerve.bilibili.live.NewGuardMessage.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.vNerve.bilibili.live.NewGuardMessage} returns this
 */
proto.vNerve.bilibili.live.NewGuardMessage.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional GuardDurationLevel duration_level = 4;
 * @return {!proto.vNerve.bilibili.live.GuardDurationLevel}
 */
proto.vNerve.bilibili.live.NewGuardMessage.prototype.getDurationLevel = function() {
  return /** @type {!proto.vNerve.bilibili.live.GuardDurationLevel} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.vNerve.bilibili.live.GuardDurationLevel} value
 * @return {!proto.vNerve.bilibili.live.NewGuardMessage} returns this
 */
proto.vNerve.bilibili.live.NewGuardMessage.prototype.setDurationLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional GuardBuyType buy_type = 5;
 * @return {!proto.vNerve.bilibili.live.GuardBuyType}
 */
proto.vNerve.bilibili.live.NewGuardMessage.prototype.getBuyType = function() {
  return /** @type {!proto.vNerve.bilibili.live.GuardBuyType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.vNerve.bilibili.live.GuardBuyType} value
 * @return {!proto.vNerve.bilibili.live.NewGuardMessage} returns this
 */
proto.vNerve.bilibili.live.NewGuardMessage.prototype.setBuyType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vNerve.bilibili.live.UserBlockedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.vNerve.bilibili.live.UserBlockedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vNerve.bilibili.live.UserBlockedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.UserBlockedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vNerve.bilibili.live.UserBlockedMessage}
 */
proto.vNerve.bilibili.live.UserBlockedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vNerve.bilibili.live.UserBlockedMessage;
  return proto.vNerve.bilibili.live.UserBlockedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vNerve.bilibili.live.UserBlockedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vNerve.bilibili.live.UserBlockedMessage}
 */
proto.vNerve.bilibili.live.UserBlockedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vNerve.bilibili.live.UserBlockedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vNerve.bilibili.live.UserBlockedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vNerve.bilibili.live.UserBlockedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vNerve.bilibili.live.UserBlockedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.vNerve.bilibili.live.LiveVipLevel = {
  NO_VIP: 0,
  MONTHLY_VIP: 1,
  YEARLY_VIP: 2
};

/**
 * @enum {number}
 */
proto.vNerve.bilibili.live.GuardLevel = {
  NO_GUARD: 0,
  LEVEL1: 1,
  LEVEL2: 2,
  LEVEL3: 3
};

/**
 * @enum {number}
 */
proto.vNerve.bilibili.live.LotteryDanmakuType = {
  NO_LOTTERY: 0,
  STORM: 1,
  LOTTERY: 2
};

/**
 * @enum {number}
 */
proto.vNerve.bilibili.live.GuardBuyType = {
  NO_TYPE: 0,
  BUY: 1,
  RENEW: 2
};

/**
 * @enum {number}
 */
proto.vNerve.bilibili.live.GuardDurationLevel = {
  NO_DURATION: 0,
  MONTHLY_GUARD: 1,
  WEEKLY_GUARD: 2
};

goog.object.extend(exports, proto.vNerve.bilibili.live);
